{"version":3,"sources":["../src/modules/Messanger/const.ts","../src/modules/Messanger/Header/Menu/Menu.ts","../src/components/Modal/Modal.ts","../src/components/Modal/ShortModal.ts","../src/components/Modal/index.ts","../src/components/Button/Button.ts","../src/components/Button/index.ts","../src/components/PagesContainer/PagesContainer.ts","../src/components/PagesContainer/index.ts","../src/components/UserPhoto/UserPhoto.ts","../src/components/UserPhoto/index.ts","../src/components/Form/Input.ts","../src/components/Form/EditInput/EditInput.ts","../src/components/Form/EditInput/index.ts","../src/components/Form/SearchInput.ts","../src/components/Form/Textarea.ts","../src/components/Form/index.ts","../src/components/index.ts","../src/api/const.ts","../src/utils/helpers.ts","../src/utils/pixel/pixelDom/const.ts","../src/utils/const.ts","../src/utils/pixel/utils/EventBus.ts","../src/utils/pixel/utils/structures/stack.ts","../src/utils/pixel/utils/structures/queue.ts","../src/utils/pixel/utils/structures/index.ts","../src/utils/pixel/utils/bfs.ts","../src/utils/pixel/utils/dfs.ts","../src/utils/pixel/utils/proxy.ts","../src/utils/pixel/utils/index.ts","../src/utils/pixel/pixelDom/Nodes/abstract/VNode.ts","../src/utils/pixel/pixelDom/Nodes/abstract/VParentNode.ts","../src/utils/pixel/pixelDom/Nodes/abstract/index.ts","../src/utils/pixel/router/router.ts","../src/utils/pixel/router/index.ts","../src/utils/pixel/store/store.ts","../src/utils/pixel/store/index.ts","../src/utils/pixel/root/pixel.ts","../src/utils/pixel/root/index.ts","../src/utils/pixel/pixelDom/Nodes/VComponentNode.ts","../src/utils/pixel/pixelDom/Nodes/VTextNode.ts","../src/utils/pixel/pixelDom/Nodes/VCommonNode.ts","../src/utils/pixel/pixelDom/Nodes/index.ts","../src/utils/pixel/pixelDom/NodeFabric.ts","../src/utils/pixel/pixelDom/pixelDom.ts","../src/utils/pixel/pixelDom/index.ts","../src/utils/pixel/parser/const.ts","../src/utils/pixel/parser/utils.ts","../src/utils/pixel/parser/tagParser.ts","../src/utils/pixel/parser/componentParser.ts","../src/utils/pixel/parser/textParser.ts","../src/utils/pixel/parser/parser.ts","../src/utils/pixel/parser/index.ts","../src/utils/pixel/index.ts","../src/utils/formValidator/FormValidator.ts","../src/utils/formValidator/index.ts","../src/utils/date-handler/dateHandler.ts","../src/utils/date-handler/index.ts","../src/utils/http/methods.enum.ts","../src/utils/http/HTTPTransport.ts","../src/utils/http/index.ts","../src/utils/index.ts","../src/api/base-api.ts","../src/api/chat.api.ts","../src/api/auth.api.ts","../src/api/user.api.ts","../src/api/chat-web-socket.api.ts","../src/api/index.ts","../src/controllers/cookie-auth.controller.ts","../src/controllers/chat.controller.ts","../src/controllers/auth.controller.ts","../src/controllers/messages.controller.ts","../src/controllers/index.ts","../src/modules/Messanger/Header/Menu/CreateModal.ts","../src/modules/Messanger/Header/Menu/Profile/ProfileRow.ts","../src/modules/Messanger/Header/Menu/Profile/ProfileInfo.ts","../src/modules/Messanger/Header/Menu/Profile/const.ts","../src/modules/Messanger/Header/Menu/Profile/profile-edit.controller.ts","../src/modules/Messanger/Header/Menu/Profile/ProfileEdit.ts","../src/modules/Messanger/Header/Menu/Profile/Profile.ts","../src/modules/Messanger/Header/Menu/Profile/index.ts","../src/modules/Messanger/Header/Menu/index.ts","../src/modules/Messanger/Header/ChatConfig/UserBadge.ts","../src/modules/Messanger/Header/ChatConfig/Participants.ts","../src/modules/Messanger/Header/ChatConfig/chat-config.controller.ts","../src/modules/Messanger/Header/ChatConfig/Config.ts","../src/modules/Messanger/Header/ChatConfig/ChatConfig.ts","../src/modules/Messanger/Header/ChatConfig/index.ts","../src/modules/Messanger/Header/Header.ts","../src/modules/Messanger/Header/index.ts","../src/modules/Messanger/ChatList/ListItem.ts","../src/modules/Messanger/ChatList/List.ts","../src/modules/Messanger/ChatList/chat-list.controller.ts","../src/modules/Messanger/ChatList/ChatList.ts","../src/modules/Messanger/ChatList/index.ts","../src/modules/Messanger/Chat/Message.ts","../src/modules/Messanger/Chat/MessageArea.ts","../src/modules/Messanger/Chat/Chat.ts","../src/modules/Messanger/Chat/index.ts","../src/modules/Messanger/index.ts","../src/modules/index.ts","../src/pages/Messanger/Messanger.ts","../src/pages/Messanger/index.ts","../src/pages/Auth/const.ts","../src/routes.ts","../src/pages/Auth/Login/login.controller.ts","../src/pages/Auth/Login/Login.ts","../src/pages/Auth/Login/index.ts","../src/pages/Auth/Registration/registration.controller.ts","../src/pages/Auth/Registration/Registration.ts","../src/pages/Auth/Registration/index.ts","../src/pages/Auth/index.ts","../src/pages/MissedPages/ServerMissPage.ts","../src/pages/MissedPages/UserMissPage.ts","../src/pages/MissedPages/index.ts","../src/pages/index.ts","../src/index.ts","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/css-loader.js","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","require","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","document","querySelectorAll","i","length","module","OVERLAY_ID","OldModule","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","overlay","createErrorOverlay","body","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"src.9caef6c7.js","sourceRoot":"../static","sourcesContent":["enum CHAT_LIST {\n  signup = 'signup',\n  signin = 'signin',\n  user = 'user',\n  logout = 'logout',\n}\n\nenum CHAT {\n  signup = 'signup',\n  signin = 'signin',\n  user = 'user',\n  logout = 'logout',\n}\n\nenum MESSANGER_ERRORS {\n  RFNV = 'Registration form is not valid',\n  LFNV = 'Login form is not valid',\n}\n\nenum SETTING_OPTIONS {\n  PROFILE = 'PROFILE',\n  CREATE_CHAT = 'CREATE_CHAT',\n  LOGOUT = 'LOGOUT',\n}\n\nconst MESSANGER_SERVICE = {\n  CHAT,\n  CHAT_LIST,\n};\n\nexport { MESSANGER_SERVICE, MESSANGER_ERRORS, SETTING_OPTIONS };\n","import { IComponentModel } from '../../../../utils';\nimport { SETTING_OPTIONS } from '../../const';\n\nexport function Menu(): IComponentModel {\n  return {\n    template: /* html */ `\n    <div class=\"header__settings\" >\n      <div class=\"settings__option\" data-name=\"${SETTING_OPTIONS.PROFILE}\" e:click=\"props.optionClick\">Профиль</div>\n      \n      <div class=\"settings__option\" \n          data-name=\"${SETTING_OPTIONS.CREATE_CHAT}\" \n          e:click=\"props.optionClick\">Создать чат</div>\n\n      <div class=\"settings__option\" data-name=\"${SETTING_OPTIONS.LOGOUT}\" e:click=\"props.optionClick\">Выйти</div>\n    </div>\n    `,\n  };\n}\n","import { IComponentModel } from '../../utils';\nimport close from '../../../static/assets/images/Icon/close.svg';\nimport './Modal.css';\n\nexport default function Modal(\n  children: string,\n  icons: string = '',\n  headerData: string = '',\n  buttons: string = ''\n): IComponentModel {\n  return {\n    template: /* html */ `\n    <div class=\"modal-window__container\">\n      <section class=\"modal-window__main\">\n        <header class=\"modal-window__header\">\n          <div class=\"modal-window__title\">\n            ${icons}\n            <h3>{{props.headerText}}</h3>\n            ${headerData}\n          </div>\n\n          <div class=\"modal-window__actions\">\n            ${buttons}\n            <img class=\"modal-window__close\" src=\"${close}\" e:click=\"props.modalClose\"/>\n          </div>\n        </header>\n        <div class=\"modal-window__body\">${children}</div>              \n      </section>\n    </div>\n    `,\n  };\n}\n","import { IComponentModel } from '../../utils';\nimport './ShortModal.css';\n\nexport function ShortModal(children: string): IComponentModel {\n  return {\n    template: /* html */ `\n    <div class=\"short-modal__container\">\n      ${children}\n    </div>\n    `,\n  };\n}\n","import Modal from './Modal';\n\nexport { ShortModal } from './ShortModal';\n\nexport default Modal;\n","import { IComponentModel } from '../../utils';\nimport './Button.css';\n\nexport function Button(): IComponentModel {\n  return {\n    template: /* html */ `\n      <button\n        p:type=\"type\"\n        p:class=\"button {{props.class}}\"\n        e:submit=\"props.onClick\"\n        e:click=\"props.onClick\">{{props.text}}</button>\n    `,\n  };\n}\n","export { Button } from './Button';\n","import { IComponentModel } from '../../utils';\n\nexport function PagesContainer(): IComponentModel {\n  return {\n    template: /* html */ `\n    <div>\n      {{children}}\n    </div>\n    `,\n  };\n}\n","export { PagesContainer } from './PagesContainer';\n","import { IComponentModel } from '../../utils';\nimport noImg from '../../../static/assets/images/Icon/no_img.png';\nimport './UserPhoto.css';\n\nexport function UserPhoto(): IComponentModel {\n  return {\n    template: /* html */ `\n    <div p:class=\"user-avatar__container {{props.containerClass}}\">\n      <img if:truthy=\"props.photo\" \n        p:src=\"https://ya-praktikum.tech/api/v2/resources/{{props.photo}}\" \n        p:class=\"user-avatar__img {{props.imgClass}}\" />\n      <img if:falsy=\"props.photo\" src=\"${noImg}\" p:class=\"user-avatar__img {{props.imgClass}}\" />\n\n      <label if:truthy=\"props.inputId\" p:for=\"inputId\" class=\"user-avatar__overlay\"></label>\n      <input if:truthy=\"props.inputId\" \n        type=\"file\" \n        name=\"avatar\" \n        accept=\"image/*\"\n        e:change=\"props.onChange\"\n        class=\"user-avatar__input\" \n        p:id=\"inputId\"\n      />\n    </div>\n    `,\n  };\n}\n","export { UserPhoto } from './UserPhoto';\n","import { IComponentModel } from '../../utils';\nimport './Input.css';\n\nexport function Input(): IComponentModel {\n  return {\n    template: /* html */ `\n    <div class=\"input\">\n      <label p:class=\"input__label {{props.loginClass || ''}}\" p:for=\"id\">{{props.label}}</label>\n      <div class=\"input__control-wrapper\">\n        <input \n          class=\"input__control\" \n          p:name=\"name\" \n          p:type=\"type\" \n          p:placeholder=\"{{props.placeholder || ''}}\" \n          p:id=\"id\" \n          p:value=\"value\"\n          e:input=\"props.onChange\"\n        />\n        <span class=\"input__underline\"></span>\n      </div>\n      <div class=\"input__error\">{{props.error}}</div>\n    </div>`,\n  };\n}\n","import { IComponentModel } from '../../../utils';\nimport { Input } from '../Input';\nimport { Button } from '../../Button';\nimport './EditInput.css';\n\nexport function EditInput(): IComponentModel {\n  return {\n    components: {\n      Input,\n      Button,\n    },\n    template: /* html */ `\n    <div class=\"edit-input__container\">\n      <Input \n        b:label=\"props.label\" \n        b:name=\"props.name\" \n        type=\"text\" \n        b:id=\"props.id\" \n        b:value=\"props.value\"\n        b:loginClass=\"props.loginClass\"\n        b:error=\"props.error\"\n        b:onChange=\"props.onChange\"\n      />\n\n      <Button \n        b:disabled=\"props.isDisabled\"\n        b:text=\"props.buttonText\" \n        class=\"button_transparent button_transparent_send\" \n        b:onClick=\"props.onClick\" />\n    </div>`,\n  };\n}\n","export { EditInput } from './EditInput';\n","import { IComponentModel } from '../../utils';\nimport './Input.css';\n\nexport function SearchInput(): IComponentModel {\n  return {\n    template: /* html */ `\n    <div class=\"input\">\n      <input \n        type=\"search\" \n        p:class=\"class\" \n        p:name=\"name\" \n        p:placeholder=\"placeholder\" \n        p:value=\"value\"\n        e:input=\"props.onChange\"\n        />\n    </div>`,\n  };\n}\n","import { IComponentModel } from '../../utils';\nimport './Input.css';\n\nexport function Textarea(): IComponentModel {\n  return {\n    state: {\n      error: '',\n    },\n    methods: {\n      keyHandler(event: KeyboardEvent) {\n        if (event.key === 'Enter' && !event.shiftKey) {\n          event.preventDefault();\n          this.componentProps.onKeyDown();\n        }\n      },\n    },\n    template: /* html */ `\n    <div class=\"input\">\n      <div class=\"input__control-wrapper\">\n        <textarea \n          class=\"input__control message-form__textarea \" \n          p:name=\"name\" \n          p:type=\"type\" \n          p:placeholder=\"placeholder\" \n          p:value=\"value\"\n          e:keydown=\"methods.keyHandler\"\n          e:input=\"props.onChange\"/>\n        <span class=\"input__underline\"></span>\n      </div>\n      <div class=\"input__error\">{{state.error}}</div>\n    </div>`,\n  };\n}\n","export { Input } from './Input';\nexport { EditInput } from './EditInput';\nexport { SearchInput } from './SearchInput';\nexport { Textarea } from './Textarea';\n","import Modal from './Modal';\n\nexport { Button } from './Button';\nexport { ShortModal } from './Modal';\nexport { PagesContainer } from './PagesContainer';\nexport { UserPhoto } from './UserPhoto';\nexport * from './Form';\nexport { Modal };\n","export const BASE = 'https://ya-praktikum.tech/api/v2';\n","const generateUniqId = () =>\n  (Number(Date.now().toString().substring(10, 13)) * (Math.random() * (200 - 1) + 1)).toFixed(0);\n\n/* eslint no-bitwise: [\"off\"] */\nfunction uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\nexport { uuid, generateUniqId };\n","enum NODE_TYPE {\n  TEXT_NODE = 'TEXT_NODE',\n  COMMON_NODE = 'COMMON_NODE',\n  COMPONENT_NODE = 'COMPONENT_NODE',\n}\n\nenum PATCH_TYPE {\n  ADD = 'ADD',\n  TEXT = 'TEXT',\n  PROPS = 'PROPS',\n  REPLACE = 'REPLACE',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n}\n\nexport { NODE_TYPE, PATCH_TYPE };\n","export enum EVENTS {\n  NDM = 'node-did-mount',\n  NU = 'node-unmount',\n  PSU = 'pixel-store-update',\n}\n","export default class EventBus {\n  listeners: Record<string, Function[]>;\n\n  constructor() {\n    this.listeners = {};\n  }\n\n  on = (event: string, callback: Function) => {\n    if (!this.listeners[event]) {\n      this.listeners[event] = [];\n    }\n\n    this.listeners[event].push(callback);\n  };\n\n  off = (event: string, callback: Function) => {\n    if (!this.listeners[event]) {\n      throw new Error(`Event ${event} is undefined `);\n    }\n\n    this.listeners[event] = this.listeners[event].filter((listener) => listener !== callback);\n  };\n\n  emit = (event: string, ...args: unknown[]) => {\n    if (!this.listeners[event]) {\n      throw new Error(`Event ${event} is undefined `);\n    }\n\n    this.listeners[event].forEach((listener: Function) => {\n      listener(...args);\n    });\n  };\n}\n","export class Stack<T> {\n  static ERRORS = {\n    EMPTY_POP: \"Can't pop, stack is empty\",\n  };\n\n  private stack: T[];\n\n  constructor() {\n    this.stack = [];\n  }\n\n  push(value: T) {\n    this.stack.push(value);\n  }\n\n  pop(): T {\n    if (this.isEmpty()) {\n      throw Error(Stack.ERRORS.EMPTY_POP);\n    }\n\n    return this.stack.pop() as T;\n  }\n\n  peek() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  isEmpty(): boolean {\n    return this.stack.length === 0;\n  }\n}\n","import { IQueueNode } from './structures.type';\n\nexport class Queue<T> {\n  static ERRORS = {\n    EMPTY_DEQUEUE: \"Can't dequeue, queue is empty\",\n  };\n\n  size: number;\n\n  head: IQueueNode<T> | null;\n\n  tail: IQueueNode<T> | null;\n\n  constructor() {\n    this.size = 0;\n\n    this.head = null;\n    this.tail = null;\n  }\n\n  enqueue(value: T) {\n    const node: IQueueNode<T> = { value, next: null, prev: null };\n\n    node.prev = this.tail;\n\n    if (this.tail) {\n      this.tail.next = node;\n      this.tail = node;\n    } else {\n      this.head = node;\n      this.tail = node;\n    }\n\n    this.size += 1;\n  }\n\n  dequeue() {\n    if (this.isEmpty()) {\n      throw new Error(Queue.ERRORS.EMPTY_DEQUEUE);\n    }\n\n    const node = this.head;\n    const nextNode = node!.next;\n\n    if (nextNode) {\n      node!.next = null;\n      nextNode.prev = null;\n    }\n\n    this.head = nextNode;\n\n    if (this.tail === node) {\n      this.tail = nextNode;\n    }\n\n    this.size -= 1;\n\n    return node!.value;\n  }\n\n  peek() {\n    return this.head;\n  }\n\n  isEmpty() {\n    return this.head === null;\n  }\n}\n","export { Stack } from './stack';\nexport { Queue } from './queue';\nexport { IQueueNode, IStackNode } from './structures.type';\n","import { VTextNode, VirtualNode } from '../pixelDom';\nimport { Queue } from './structures';\n\nexport function BFS(root: VirtualNode, callback: Function, args?: unknown) {\n  const queue = new Queue<VirtualNode>();\n  queue.enqueue(root);\n\n  while (!queue.isEmpty()) {\n    const node = queue.dequeue();\n\n    callback(node, args);\n\n    if (!(node instanceof VTextNode)) {\n      for (let i = 0; i < node.children.length; i += 1) {\n        queue.enqueue(node.children[i]);\n      }\n    }\n  }\n}\n\nexport function bfsFirstParents(root: VirtualNode, target: string) {\n  const queue = new Queue<VirtualNode>();\n  const found = [];\n  queue.enqueue(root);\n\n  while (!queue.isEmpty()) {\n    const node = queue.dequeue();\n\n    /*  if (node.usedProps.has(target)) {\n      found.push(node);\n    } else if (!(node instanceof VTextNode)) {\n      for (let i = 0; i < node.children.length; i += 1) {\n        queue.enqueue(node.children[i]);\n      }\n    } */\n  }\n\n  return found;\n}\n","import { ParentNodeType, VirtualNode, VTextNode } from '../pixelDom';\nimport { Stack } from './structures';\n\nexport const DFS = (root: ParentNodeType, callback: Function) => {\n  const stack = new Stack<VirtualNode>();\n\n  stack.push(root);\n\n  while (!stack.isEmpty()) {\n    const current = stack.pop();\n\n    if (!(current instanceof VTextNode) && current.children.length) {\n      callback(current, stack);\n    }\n  }\n};\n","type ProxyObject = Record<string, any>;\ntype Validator = Record<string, Function>;\n\nfunction createProxyObject<T>(props: ProxyObject = {}, callback: Function, name?: string): T {\n  const validator: Validator = {\n    get: (target: ProxyObject, prop: keyof ProxyObject): any => {\n      if (typeof target[prop] === 'object' && target[prop] !== null) {\n        return createProxyObject(target[prop], callback, name ? `${name}.${prop}` : prop);\n      }\n\n      return target[prop];\n    },\n    set: (target: ProxyObject, prop: keyof ProxyObject, value: any) => {\n      target[prop] = value;\n      callback([{ [prop]: target[prop] }, { [prop]: value }, name ? `${name}.${prop}` : name]);\n      return true;\n    },\n    deleteProperty: () => false,\n  };\n\n  return new Proxy(props as Object, validator) as T;\n}\n\nexport { createProxyObject };\n","import EventBus from './EventBus';\n\nexport { EventBus };\nexport { IStackNode, Stack, Queue, IQueueNode } from './structures';\nexport { BFS, bfsFirstParents } from './bfs';\nexport { DFS } from './dfs';\nexport { createProxyObject } from './proxy';\n","import { INode } from './node.type';\nimport { NODE_TYPE } from '../../const';\nimport { ParentNodeType } from '../nodes.type';\nimport { uuid } from '../../../../helpers';\nimport { Props } from '../componentNode.type';\n\nexport default abstract class VNode implements INode {\n  type: NODE_TYPE;\n\n  domEl: Text;\n\n  props: Props;\n\n  parent: ParentNodeType;\n\n  keyIndex: number;\n\n  key: string = uuid();\n\n  abstract setParentNode(parent: ParentNodeType): void;\n}\n","import { ParentNodeType, VirtualNode } from '../nodes.type';\nimport { INode } from './node.type';\nimport { NODE_TYPE } from '../../const';\nimport { EventHandler, Props } from '../componentNode.type';\nimport { uuid } from '../../../../helpers';\nimport { EventBus } from '../../../utils';\n\nexport default abstract class VParentNode implements INode {\n  domEl: HTMLElement;\n\n  type: NODE_TYPE;\n\n  tagName: string;\n\n  eventBus: EventBus = new EventBus();\n\n  eventHandlers: EventHandler;\n\n  parent: ParentNodeType;\n\n  children: VirtualNode[] = [];\n\n  keyIndex: number;\n\n  key: string = uuid();\n\n  props: Props;\n\n  nodeDidMount(callback?: Function) {\n    if (this.eventHandlers.size) {\n      this.eventHandlers.forEach((value: Function, key: string) => {\n        this.domEl.addEventListener(key, value as any, true);\n      });\n    }\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  nodeUnmount(callback?: Function) {\n    if (this.eventHandlers.size) {\n      this.eventHandlers.forEach((value: Function, key: string) => {\n        this.domEl.removeEventListener(key, value as any, true);\n      });\n    }\n\n    if (callback) {\n      callback();\n    }\n  }\n\n  abstract setParentNode(parent: ParentNodeType): void;\n\n  abstract setNewPixelStoreProps([field, value]: [string, any]): void;\n}\n","import VNode from './VNode';\nimport VParentNode from './VParentNode';\n\nexport { VNode, VParentNode };\n","import { Pixel } from '..';\nimport { IDefaultRoute, IRoutes, IRoutesConfig } from './router.type';\n\nclass Router {\n  static ERRORS: Record<string, string> = {\n    NO_DEF_CONF: 'Router default config not found',\n    NO_DEF_ROUTES: 'Router default path not found',\n    WRONG_DEF_COMP: 'Router default component has not found',\n    NO_ROUTES: 'Path has not been added to the router',\n    WRONG_COMP: 'Router has not found required component',\n  };\n\n  static EVENTS: Record<string, string> = {\n    INIT: 'init',\n    UPDATE: 'update',\n  };\n\n  static instantce: Router;\n\n  private pixelInstantce: typeof Pixel;\n\n  public defaultRoute: IDefaultRoute;\n\n  public routes: IRoutes;\n\n  public history: History;\n\n  private currentPlace: string;\n\n  private withAuth: boolean = true;\n\n  private isAuth: boolean = false;\n\n  private permittedRoutes: string[];\n\n  private redirect: string;\n\n  private authRedirect: string;\n\n  constructor(pixelInstantce?: typeof Pixel) {\n    if (Router.instantce) {\n      return Router.instantce;\n    }\n\n    this.setPixelInstantce(pixelInstantce);\n\n    this.history = window.history;\n\n    Router.instantce = this;\n  }\n\n  public setPixelInstantce(pixelInstantce?: typeof Pixel) {\n    if (pixelInstantce) {\n      this.pixelInstantce = pixelInstantce;\n    }\n  }\n\n  public handleAuthChange(isAuth: boolean) {\n    if (!isAuth) {\n      this.isAuth = false;\n    } else {\n      this.isAuth = true;\n    }\n\n    this.checkRoute(window, true);\n  }\n\n  public async setRoutes(routesConfig: IRoutesConfig) {\n    const { routes, defaultRoute, auth } = routesConfig;\n\n    try {\n      if (!defaultRoute) {\n        throw Error(Router.ERRORS.NO_DEF_CONF);\n      }\n\n      if (!defaultRoute.path) {\n        throw Error(Router.ERRORS.NO_DEF_ROUTES);\n      }\n\n      if (!this.pixelInstantce.components[defaultRoute.component]) {\n        throw Error(Router.ERRORS.WRONG_DEF_COMP);\n      }\n\n      if (!routes) {\n        throw Error(Router.ERRORS.NO_ROUTES);\n      }\n\n      Object.keys(routes).forEach((key) => {\n        if (!routes[key] || !this.pixelInstantce.components[routes[key].component]) {\n          throw Error(Router.ERRORS.WRONG_COMP);\n        }\n      });\n\n      this.defaultRoute = defaultRoute;\n      this.routes = { ...routes, [defaultRoute.path]: defaultRoute };\n\n      if (auth) {\n        const { redirect, check, permittedRoutes, authRedirect } = auth;\n        this.redirect = redirect;\n        this.authRedirect = authRedirect;\n        this.permittedRoutes = permittedRoutes;\n        await check();\n      } else {\n        this.withAuth = false;\n      }\n\n      this.start();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  private start = () => {\n    window.onpopstate = (event: any) => {\n      const target = event.currentTarget as Window;\n      this.checkRoute(target);\n    };\n\n    this.checkRoute(window);\n  };\n\n  public go(pathname: string) {\n    this.history.pushState({ page: pathname }, '', pathname);\n    this.checkRoute(window);\n  }\n\n  private checkRoute = (target: Window = window, authChange?: boolean) => {\n    let currentRoute = target.location.pathname.slice(1);\n\n    if (!currentRoute) {\n      currentRoute = this.defaultRoute.path;\n    } else if (!this.routes[currentRoute]) {\n      currentRoute = 'wrong';\n    }\n\n    if (this.currentPlace !== currentRoute || authChange) {\n      if (this.withAuth) {\n        this.replaceWithAuth(currentRoute);\n      } else {\n        this.changeLayout(this.routes[currentRoute].component, currentRoute);\n      }\n    }\n  };\n\n  private replaceWithAuth(currentRoute: string) {\n    const isFromBasePermitted = this.permittedRoutes.some((route) => route === currentRoute);\n\n    if (!this.isAuth && !isFromBasePermitted) {\n      this.go(this.redirect);\n    } else if (this.isAuth && isFromBasePermitted) {\n      this.go(this.authRedirect);\n    } else {\n      this.changeLayout(this.routes[currentRoute].component, currentRoute);\n    }\n  }\n\n  public changeLayout = (componentName: string, currentRoute: string) => {\n    this.currentPlace = currentRoute;\n    this.pixelInstantce.render(`<${componentName}  />`);\n  };\n}\n\nexport default Router;\n","import Router from './router';\n\nexport { Router };\nexport { IRoutesConfig, IRouterState, IDefaultRoute } from './router.type';\n","import { EVENTS } from '../../const';\nimport { parseObjectPathTag } from '../parser/utils';\nimport { ParentNodeType, VComponentNode } from '../pixelDom';\nimport { Pixel } from '../root';\nimport { ICurrentUserStore } from './store.type';\n\nexport class Store {\n  static ERRORS = {\n    missStoreField: (field: string) => `Store does't have field - ${field}`,\n  };\n\n  pixelInstance: typeof Pixel;\n\n  protected authListenters: Record<string, any>[] = [];\n\n  public currentUser: ICurrentUserStore;\n\n  store: Record<string, any>;\n\n  listeners: Record<string, ParentNodeType[]> = {};\n\n  constructor(pixelInstance: typeof Pixel) {\n    this.pixelInstance = pixelInstance;\n    this.authListenters.push(this.pixelInstance.router);\n\n    this.currentUser = this.createUserStore();\n  }\n\n  init(baseStore: Record<string, any> = {}) {\n    this.store = this.createStore({ ...baseStore, currentUser: this.currentUser });\n  }\n\n  createStore(baseStore: Record<string, any>) {\n    const self = this;\n    const validator = {\n      get: (target: Record<string, any>, key: string): unknown => target[key],\n      set: (target: Record<string, any>, prop: string, value: unknown) => {\n        if (prop in target) {\n          target[prop] = value;\n          self.emit(prop);\n          return true;\n        }\n\n        console.error(Store.ERRORS.missStoreField(prop));\n\n        return false;\n      },\n      deleteProperty: () => false,\n    };\n\n    return new Proxy(baseStore, validator);\n  }\n\n  createUserStore() {\n    const self = this;\n    const validator = {\n      get: (target: ICurrentUserStore, key: string): unknown => target[key],\n      set: (target: ICurrentUserStore, prop: string, value: unknown) => {\n        target[prop] = value;\n\n        if (prop === 'isAuth') {\n          self.emitAuthListenters(value as boolean);\n        }\n        return true;\n      },\n      deleteProperty: () => false,\n    };\n\n    return new Proxy({ isAuth: false }, validator);\n  }\n\n  subscribe(field: string, listener: ParentNodeType) {\n    if (!this.listeners[field]) {\n      this.listeners[field] = [];\n      this.store[field] = null;\n    }\n\n    this.listeners[field].push(listener);\n  }\n\n  unsubscribe = (event: string, listener: ParentNodeType) => {\n    if (!this.listeners[event]) {\n      throw new Error(`Event ${event} is undefined `);\n    }\n\n    this.listeners[event] = this.listeners[event].filter((item) => item !== listener);\n  };\n\n  forceUpdate = (field: string, component: VComponentNode) => {\n    if (this.store[field]) {\n      component.eventBus.emit(EVENTS.PSU, [field, this.store[field]]);\n    }\n  };\n\n  dispatch(field: string, value: any) {\n    this.store[field] = value;\n  }\n\n  setUserData(data: ICurrentUserStore) {\n    Object.keys(data).forEach((key) => {\n      this.currentUser[key] = data[key];\n    });\n  }\n\n  protected emit = (field: string) => {\n    if (this.listeners[field]) {\n      this.listeners[field].forEach((listener) => {\n        listener.eventBus.emit(EVENTS.PSU, [field, this.store[field]]);\n      });\n    }\n  };\n\n  protected emitAuthListenters = (isAuth: boolean) => {\n    this.authListenters.forEach((listener) => {\n      if (listener && listener.handleAuthChange) {\n        listener.handleAuthChange(isAuth);\n      }\n    });\n  };\n}\n","export { Store } from './store';\nexport { IPixelStoreUpdateProp } from './store.type';\n","import { Parser } from '../parser';\nimport { ParentNodeType, IComponentModel, pixelDOM } from '../pixelDom';\nimport { IRoutesConfig, Router } from '../router';\nimport { EVENTS } from '../../const';\nimport { Store } from '../store';\n\nexport interface IPixelInstance {\n  el: string;\n  template?: string;\n  routerConfig?: IRoutesConfig;\n  store?: Record<string, any>;\n  components?: Record<string, Function>;\n}\n\nexport class Pixel {\n  static ERROR = {\n    ROOT_NF: (selector: string) => `Root element ${selector} is not found`,\n    ROOT_DOM_NF: (tagName: string) => `Root dom element ${tagName} has not created valid dom node`,\n    VDOM_NF: 'Failed to build VDOM',\n    PIXEL_ISALRE: 'Failed to build VDOM',\n    INITIATED: 'Pixel already in use',\n    FRONG_COMPONENT: (name: string) => `Component \"${name}\" is not registered`,\n  };\n\n  static CONST = {\n    CDM: EVENTS.NDM,\n  };\n\n  protected static instance: Pixel;\n\n  public router: Router;\n\n  public store: Store;\n\n  public root: Element;\n\n  private VDOM: ParentNodeType;\n\n  public components: Record<string, Function> = {};\n\n  protected isInitiated: boolean = false;\n\n  public initiatedComponents: Record<string, IComponentModel> = {};\n\n  constructor() {\n    this.router = new Router(this);\n    this.store = new Store(this);\n  }\n\n  config(config: IPixelInstance) {\n    if (this.isInitiated) {\n      throw new Error(Pixel.ERROR.INITIATED);\n    }\n\n    this.setRootEl(config.el);\n    this.store.init(config.store);\n    this.registerComponents(config.components);\n    this.init(config.routerConfig, config.template);\n    this.isInitiated = true;\n  }\n\n  registerComponents(components: { [key: string]: Function } | undefined): void {\n    if (components) {\n      Object.keys(components).forEach((componentName: string) => {\n        if (!this.components[componentName]) {\n          this.components[componentName] = components[componentName];\n        }\n      });\n    }\n  }\n\n  callComponentModel(componentName: string) {\n    if (this.components[componentName]) {\n      const componentModel = this.components[componentName]();\n      componentModel.name = componentName;\n      return componentModel;\n    }\n\n    throw Error(Pixel.ERROR.FRONG_COMPONENT(componentName));\n  }\n\n  setRootEl = (selector: string) => {\n    try {\n      const root = document.querySelector(selector);\n      if (!root) {\n        throw new Error(Pixel.ERROR.ROOT_NF(selector));\n      } else {\n        this.root = root;\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  init = (routerConfig: IRoutesConfig | null = null, template: string | null = null) => {\n    if (routerConfig) {\n      this.router.setRoutes(routerConfig);\n    } else if (template) {\n      this.render(template);\n    }\n  };\n\n  render = (template: string) => {\n    try {\n      if (this.VDOM) {\n        pixelDOM.unmount(this.VDOM);\n      }\n\n      this.VDOM = Parser.parseHTML(template);\n\n      if (!this.VDOM) {\n        throw Error(Pixel.ERROR.VDOM_NF);\n      }\n\n      this.mount(this.VDOM);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  mount = (VDOM: ParentNodeType) => {\n    try {\n      pixelDOM.render(VDOM);\n\n      if (!VDOM.domEl) {\n        throw Error(Pixel.ERROR.ROOT_DOM_NF(VDOM.tagName));\n      }\n\n      if (this.root.childNodes.length) {\n        this.root.replaceChild(VDOM.domEl, this.root.childNodes[0]);\n      } else {\n        this.root.appendChild(VDOM.domEl);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n\nconst PixelRoot = new Pixel();\n\nexport default PixelRoot;\n\nexport const PixelRouter = PixelRoot.router;\nexport const PixelStore = PixelRoot.store;\n","import Pixel from './pixel';\n\nexport { PixelRouter, PixelStore } from './pixel';\nexport { Pixel };\n","import { EVENTS } from '../../../const';\nimport { NODE_TYPE, pixelDOM } from '../pixelDom';\nimport { createProxyObject } from '../../utils';\nimport { Props, State, Methods } from './componentNode.type';\nimport { ParentNodeType, IComponentOptions } from './nodes.type';\nimport { VParentNode } from './abstract';\nimport { IPixelStoreUpdateProp } from '../../store';\nimport { Parser } from '../../parser';\nimport { PixelStore } from '../../root';\n\nexport class VComponentNode extends VParentNode {\n  static EVENTS = {\n    CDM: EVENTS.NDM,\n    CDU: 'component-did-update',\n    CU: EVENTS.NU,\n    PSU: EVENTS.PSU,\n  };\n\n  timer: number;\n\n  type = NODE_TYPE.COMPONENT_NODE;\n\n  tagName: string;\n\n  name: string;\n\n  private componentDidMountFunc: Function | null;\n\n  private componentWillUnmountFunc: Function | null;\n\n  private componentDidUpdateFunc: Function | null;\n\n  pixelStore: Set<string> = new Set();\n\n  pixelStoreFields: string[] = [];\n\n  methods: Methods;\n\n  state: State;\n\n  componentProps: Props;\n\n  constructor(options: IComponentOptions) {\n    super();\n\n    this.name = options.name;\n\n    this.keyIndex = 0;\n    this.methods = options.methods;\n    this.componentProps = createProxyObject(options.componentProps, this.defaultPropsHandler.bind(this));\n    this.state = createProxyObject(options.state, this.defaultPropsHandler.bind(this));\n    this.componentDidMountFunc = options.componentDidMount || null;\n    this.componentWillUnmountFunc = options.componentWillUnmount || null;\n    this.componentDidUpdateFunc = options.componentDidUpdate || null;\n    this.pixelStoreFields = options.pixelStore;\n    this.registerEvents();\n  }\n\n  init(options: ParentNodeType) {\n    this.props = createProxyObject(options.props, this.defaultPropsHandler.bind(this));\n    this.eventHandlers = options.eventHandlers;\n    this.tagName = options.tagName;\n    this.children = options.children || [];\n  }\n\n  updateProps(props: Props) {\n    this.props = createProxyObject(props, this.defaultPropsHandler.bind(this));\n  }\n\n  registerEvents() {\n    /* node added to DOM */\n    this.eventBus.on(VComponentNode.EVENTS.CDM, this.nodeDidMount.bind(this, this.componentDidMount.bind(this)));\n    this.eventBus.on(VComponentNode.EVENTS.CDU, this.componentDidUpdate.bind(this));\n    /*  node removed from DOM */\n    this.eventBus.on(VComponentNode.EVENTS.CU, this.nodeUnmount.bind(this, this.componentWillUnmount.bind(this)));\n    /*  pixel store update */\n    this.eventBus.on(VComponentNode.EVENTS.PSU, this.setNewPixelStoreProps.bind(this));\n  }\n\n  defaultPropsHandler(args: any) {\n    this.eventBus.emit(VComponentNode.EVENTS.CDU, ...args);\n  }\n\n  conectToPixelStore(fields: string[]) {\n    if (fields) {\n      fields.forEach((field: string) => {\n        if (!this.pixelStore.has(field)) {\n          this.pixelStore.add(field);\n          PixelStore.subscribe(field, this);\n          PixelStore.forceUpdate(field, this);\n        }\n      });\n    }\n  }\n\n  setParentNode(parent: ParentNodeType) {\n    this.parent = parent;\n  }\n\n  componentDidMount() {\n    this.conectToPixelStore(this.pixelStoreFields);\n\n    if (this.componentDidMountFunc) {\n      this.componentDidMountFunc.call(this, this);\n    }\n  }\n\n  componentDidUpdate(oldProps: any, newProps: any) {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n\n    this.timer = setTimeout(() => {\n      const newTree = Parser.componentParser.reParse(this.name, this);\n\n      pixelDOM.patch(this, newTree);\n\n      if (this.componentDidUpdateFunc) {\n        this.componentDidUpdateFunc(oldProps, newProps);\n      }\n    }, 150);\n  }\n\n  componentWillUnmount() {\n    if (this.componentWillUnmountFunc) {\n      this.componentWillUnmountFunc.call(this, this);\n    }\n\n    if (this.pixelStore.size) {\n      this.pixelStore.forEach((field) => {\n        PixelStore.unsubscribe(field, this);\n      });\n    }\n  }\n\n  setNewPixelStoreProps([field, value]: IPixelStoreUpdateProp) {\n    if (field in this.state) {\n      this.state[field] = value;\n    }\n  }\n}\n","import { NODE_TYPE } from '../const';\nimport { ITextNodeProps, ParentNodeType } from './nodes.type';\nimport { VNode } from './abstract';\n\nexport class VTextNode extends VNode {\n  type = NODE_TYPE.TEXT_NODE;\n\n  text: string;\n\n  propsKey: string;\n\n  constructor(config: ITextNodeProps) {\n    super();\n    const { text, props } = config;\n\n    if (props) {\n      Object.keys(props).forEach((key: string) => {\n        this.text = props[key];\n        this.propsKey = key;\n      });\n\n      this.props = props;\n    } else {\n      this.text = text;\n    }\n  }\n\n  updateText(text: string = '') {\n    this.text = text;\n\n    if (this.propsKey) {\n      this.props[this.propsKey] = text;\n    }\n  }\n\n  setParentNode(parent: ParentNodeType) {\n    this.parent = parent;\n  }\n}\n","import { NODE_TYPE } from '../const';\nimport { ParentNodeType, INodeProps } from './nodes.type';\nimport { VParentNode } from './abstract';\nimport { IPixelStoreUpdateProp } from '../../store';\nimport { createProxyObject } from '../../utils';\nimport { EVENTS } from '../../../const';\nimport { Props } from './componentNode.type';\n\nexport class VCommonNode extends VParentNode {\n  type = NODE_TYPE.COMMON_NODE;\n\n  tagName: string;\n\n  constructor({ props, tagName, events }: INodeProps) {\n    super();\n\n    this.tagName = tagName;\n    this.eventHandlers = events;\n    this.props = createProxyObject(props, this.update);\n    this.registerEvents();\n  }\n\n  updateProps(props: Props) {\n    this.props = createProxyObject(props, this.update.bind(this));\n  }\n\n  registerEvents() {\n    this.eventBus.on(EVENTS.NDM, this.nodeDidMount.bind(this));\n    this.eventBus.on(EVENTS.NU, this.nodeUnmount.bind(this));\n  }\n\n  setParentNode(parent: ParentNodeType) {\n    this.parent = parent;\n  }\n\n  setNewPixelStoreProps([field, value]: IPixelStoreUpdateProp) {\n    this.props[field] = value;\n  }\n\n  update = (up: any) => {\n    console.warn('node update', up);\n  };\n}\n","export { VComponentNode } from './VComponentNode';\nexport { VTextNode } from './VTextNode';\nexport { VCommonNode } from './VCommonNode';\nexport * from './componentNode.type';\nexport * from './nodes.type';\n","import { IParsedTag } from '../parser';\nimport {\n  VCommonNode,\n  VTextNode,\n  VComponentNode,\n  ITextNodeProps,\n  IComponentOptions,\n  INodeProps,\n  IInitiatedComponent,\n} from './Nodes';\n\nexport default class NodeFabric {\n  public create(config: IInitiatedComponent | INodeProps | ITextNodeProps, componentParsed?: IParsedTag) {\n    if ('name' in config) {\n      return this.createComponent(config, componentParsed!);\n    }\n\n    if ('tagName' in config) {\n      return this.createNode(config);\n    }\n\n    return this.createText(config);\n  }\n\n  private createNode = (props: INodeProps): VCommonNode => new VCommonNode(props);\n\n  private createText = (props: ITextNodeProps): VTextNode => new VTextNode(props);\n\n  private createComponent = (componentConfig: IInitiatedComponent, parsed: IParsedTag): VComponentNode => {\n    const props: IComponentOptions = {\n      componentProps: parsed.props,\n      pixelStore: componentConfig.pixelStore,\n      state: componentConfig.state,\n      name: componentConfig.name,\n      methods: componentConfig.methods || {},\n      componentDidMount: componentConfig.componentDidMount,\n      componentWillUnmount: componentConfig.componentWillUnmount,\n      componentDidUpdate: componentConfig.componentDidUpdate,\n    };\n\n    return new VComponentNode(props);\n  };\n}\n","import { NODE_TYPE, PATCH_TYPE } from './const';\nimport NodeFabric from './NodeFabric';\nimport { ParentNodeType, VTextNode, VirtualNode, VComponentNode, Props } from './Nodes';\nimport { EVENTS } from '../../const';\nimport { IPatch, PropsDiff } from './pixelDom.type';\nimport { BFS } from '../utils';\n\nclass PixelDOM {\n  static instance: PixelDOM;\n\n  nodeFabric: NodeFabric;\n\n  constructor() {\n    if (PixelDOM.instance) {\n      return PixelDOM.instance;\n    }\n\n    this.nodeFabric = new NodeFabric();\n\n    PixelDOM.instance = this;\n  }\n\n  render(node: VirtualNode) {\n    if (node instanceof VTextNode) {\n      return this.mountTextNode(node);\n    }\n\n    return this.mountNode(node);\n  }\n\n  mountTextNode = (node: VTextNode): VTextNode => {\n    const domNode = document.createTextNode(node.text);\n    node.domEl = domNode;\n    return node;\n  };\n\n  mountNode = (node: ParentNodeType): VirtualNode => {\n    const domNode = window.document.createElement(node.tagName);\n    node.domEl = domNode;\n    node.eventBus.emit(EVENTS.NDM);\n\n    this.setProps(node);\n\n    /* link between parent and children */\n    node.children.forEach((child: VirtualNode, index: number) => {\n      child.setParentNode(node);\n\n      if (child instanceof VTextNode) {\n        this.mountTextNode(child);\n      } else {\n        child.keyIndex = index;\n        this.mountNode(child);\n      }\n\n      domNode.appendChild(child.domEl);\n    });\n\n    return node;\n  };\n\n  setProps = (node: ParentNodeType, newNode?: ParentNodeType, pDiff?: PropsDiff) => {\n    if (pDiff) {\n      pDiff.forEach((value, key) => {\n        if (value === undefined) {\n          this.removeAttribute(node, key, value);\n        } else {\n          this.setAttribute(node, key, value);\n        }\n        node.updateProps(newNode!.props);\n      });\n    } else {\n      const props = Object.entries(node.props);\n      props.forEach(([key, value]) => {\n        this.setAttribute(node, key, value);\n      });\n    }\n  };\n\n  setAttribute = (node: ParentNodeType, key: string, value: string | boolean) => {\n    if (typeof value === 'boolean' || key === 'value') {\n      (node.domEl as any).value = value;\n    } else if (value) {\n      node.domEl.setAttribute(key, value);\n    }\n  };\n\n  removeAttribute = (node: ParentNodeType, key: string, value: string | boolean) => {\n    if (typeof value === 'boolean') {\n      (node.domEl as any).value = false;\n    } else if (key === 'value') {\n      (node.domEl as any).value = '';\n    } else {\n      node.domEl.removeAttribute(key);\n    }\n  };\n\n  patch = (oldNode: VComponentNode, newNode: VComponentNode) => {\n    const patches: IPatch[] = [];\n    this.diff(oldNode, newNode, patches);\n    this.update(patches);\n  };\n\n  diff = (oldNode: VirtualNode, newNode: VirtualNode, patches: IPatch[]) => {\n    if (oldNode.type !== newNode.type) {\n      patches.push({\n        type: PATCH_TYPE.REPLACE,\n        newNode,\n        oldNode,\n      });\n    } else if (newNode instanceof VTextNode) {\n      if ((oldNode as VTextNode).text !== newNode.text) {\n        patches.push({\n          type: PATCH_TYPE.TEXT,\n          newNode,\n          oldNode,\n        });\n      }\n    } else if ((oldNode as ParentNodeType).tagName !== newNode.tagName) {\n      patches.push({\n        type: PATCH_TYPE.REPLACE,\n        newNode,\n        oldNode,\n      });\n    } else {\n      const pDiff: PropsDiff = this.diffProps(oldNode.props, newNode.props);\n\n      if (pDiff.size) {\n        patches.push({\n          type: PATCH_TYPE.PROPS,\n          newNode,\n          oldNode,\n          pDiff,\n        });\n      }\n\n      this.diffChildren(oldNode as ParentNodeType, newNode, patches);\n    }\n  };\n\n  diffChildren = (oldNode: ParentNodeType, newNode: ParentNodeType, patches: IPatch[]) => {\n    const oChildren = oldNode.children;\n    const nChildren = newNode.children;\n    const maxLength = Math.max(oChildren.length, nChildren.length);\n\n    for (let i = 0; i < maxLength; i += 1) {\n      const oChild = oChildren[i];\n      const nChild = nChildren[i];\n\n      if (!nChild) {\n        patches.push({\n          type: PATCH_TYPE.DELETE,\n          oldNode: oChild,\n          newNode: nChild,\n        });\n      } else if (!oChild) {\n        patches.push({\n          type: PATCH_TYPE.ADD,\n          oldNode: oChild,\n          newNode: nChild,\n          parent: oldNode,\n        });\n      } else {\n        this.diff(oChild, nChild, patches);\n      }\n    }\n  };\n\n  diffProps = (oldProps: Props, newProps: Props) => {\n    const diff: PropsDiff = new Map();\n\n    for (const key in oldProps) {\n      if (oldProps[key] !== newProps[key]) {\n        diff.set(key, newProps[key]);\n      }\n    }\n\n    for (const key in newProps) {\n      if (oldProps[key] === undefined) {\n        diff.set(key, newProps[key]);\n      }\n    }\n\n    return diff;\n  };\n\n  update(patches: IPatch[]) {\n    patches.forEach((patch) => {\n      const { oldNode, newNode, type, pDiff, parent } = patch;\n      if (type === PATCH_TYPE.REPLACE) {\n        this.replace(oldNode, newNode);\n      } else if (type === PATCH_TYPE.TEXT) {\n        (oldNode as VTextNode).updateText((newNode as VTextNode).text);\n        oldNode.domEl.textContent = (newNode as VTextNode).text;\n      } else if (type === PATCH_TYPE.PROPS) {\n        this.setProps(oldNode as ParentNodeType, newNode as ParentNodeType, pDiff);\n      } else if (type === PATCH_TYPE.ADD) {\n        const node = this.render(newNode);\n        node.setParentNode(parent!);\n\n        parent?.domEl.appendChild(node.domEl);\n        parent?.children.push(node);\n        parent?.children.forEach((child, index) => {\n          child.keyIndex = index;\n        });\n      } else if (type === PATCH_TYPE.DELETE) {\n        this.removeChild(oldNode);\n      }\n    });\n  }\n\n  replace(oldNode: VirtualNode, newNode: VirtualNode) {\n    const { parent } = oldNode;\n\n    const node = this.render(newNode);\n    node.setParentNode(parent);\n    node.keyIndex = oldNode.keyIndex;\n\n    parent.children[oldNode.keyIndex] = node;\n    parent.domEl.replaceChild(node.domEl, oldNode.domEl);\n\n    this.unmount(oldNode);\n  }\n\n  removeChild(node: VirtualNode) {\n    node.parent.domEl.removeChild(node.domEl);\n    node.parent.children.splice(node.keyIndex, 1);\n    node.parent.children.forEach((child, index) => {\n      child.keyIndex = index;\n    });\n    this.unmount(node);\n  }\n\n  unmount = (node: VirtualNode) => {\n    const callUnmount = (vnode: VirtualNode) => {\n      if (!(vnode instanceof VTextNode)) {\n        vnode.eventBus.emit(EVENTS.NU);\n      }\n    };\n\n    BFS(node, callUnmount);\n  };\n}\n\nconst pixelDOM = new PixelDOM();\n\nexport { pixelDOM, NODE_TYPE, PixelDOM };\n","export { pixelDOM } from './pixelDom';\nexport { NODE_TYPE } from './const';\nexport * from './Nodes';\n","import { IPropStorages } from './parser.type';\n\n/*    b: - value from parent state/props\n      e: - event\n*/\n\nexport const ERRORS = {\n  missedBindStore: (value: string) => `The binding string (${value}) does not refer to valid objects - IPropStorages`,\n  missedBindProperty: (prop: string) => `IPropStorages storage does't have \"${prop}\"`,\n};\n\nexport const PREFIXES = {\n  BIND: 'b:',\n  EVENT: 'e:',\n  PROPS: 'p:',\n  CONDITION: 'if:',\n  LIST: 'map:',\n};\n\nexport const LIST_TYPE = {\n  OBJECT_ARRAY: 'array',\n};\n\nexport const PROP_STORAGES: Record<string, keyof IPropStorages> = {\n  state: 'state',\n  props: 'props',\n  methods: 'methods',\n};\n\n/* export const EMOJI: Record<string, string> = {\n  rebel: `<img src=\"${rebel}\" width=\"30\" height=\"30\"/>`,\n  alian: `<img src=\"${alien}\" width=\"30\" height=\"30\"/>`,\n  its_fine: `<img src=\"${itsFine}\" class=\"sticker\"/>`,\n}; */\n","import { PROP_STORAGES, ERRORS } from './const';\nimport { Props, State } from '../pixelDom';\nimport { IData, ISliceStoreWithAlt, ISliceStore, IPropStorages } from './parser.type';\n\nconst parseObjectPathTag = (store: Props | State, path: string, alt?: string): unknown => {\n  try {\n    const keys = path.split('.');\n    let result = store;\n\n    for (const key of keys) {\n      const value = result[key];\n\n      if (value === undefined || value === null) {\n        if (alt) {\n          return alt;\n        }\n        /* console.warn(ERRORS.missedBindProperty(path)); */\n        return '';\n      }\n\n      result = value as Props;\n    }\n    return result;\n  } catch (error) {\n    throw Error(ERRORS.missedBindProperty(path));\n  }\n};\n\nconst slicePropStorage = (value: string): ISliceStore | ISliceStoreWithAlt => {\n  const altSplit = value.split('||');\n  const isAlt = altSplit.length > 1;\n\n  /* alternative value if main prop is undefined */\n  if (isAlt) {\n    const [store, ...path] = altSplit[0].trim().split('.');\n    let altStore = '';\n    let altPath = '';\n\n    if (altSplit[1].trim() !== \"''\") {\n      const [aStore, ...aPath] = altSplit[1].trim().split('.');\n      altStore = PROP_STORAGES[aStore] ? PROP_STORAGES[aStore] : aStore;\n      altPath = aPath.join('.');\n    }\n\n    if (!PROP_STORAGES[store]) {\n      throw Error(ERRORS.missedBindStore(value));\n    }\n\n    return [PROP_STORAGES[store], path.join('.'), altStore, altPath];\n  }\n\n  const [store, ...path] = value.split('.');\n\n  if (!PROP_STORAGES[store]) {\n    throw Error(ERRORS.missedBindStore(value));\n  }\n\n  return [PROP_STORAGES[store], path.join('.')];\n};\n\nconst bindProps = <T>(props: Props, name: string, store: T, path: string) => {\n  props[name] = parseObjectPathTag(store, path);\n};\n\nconst takePropInStore = (value: string, data: IData, predefinedStore?: State | Props) => {\n  if (predefinedStore) {\n    return parseObjectPathTag(predefinedStore, value);\n  }\n  const [store, path, aStore, aPath] = slicePropStorage(value);\n\n  const altStore = PROP_STORAGES[aStore!];\n  const altValue = aPath && altStore ? parseObjectPathTag(data[aStore as keyof IPropStorages], aPath) : aStore;\n\n  if (altValue !== undefined) {\n    return parseObjectPathTag(data[store], path, altValue as string);\n  }\n\n  return parseObjectPathTag(data[store], path);\n};\n\nexport { parseObjectPathTag, slicePropStorage, bindProps, takePropInStore };\n","import { LIST_TYPE, PREFIXES } from './const';\nimport { IData, IParsedTag } from './parser.type';\nimport { Props, EventHandler } from '../pixelDom';\nimport { slicePropStorage, bindProps, takePropInStore, parseObjectPathTag } from './utils';\nimport PixelParser from './parser';\n\nexport class TagParser {\n  parserInstant: PixelParser;\n\n  private attrRegExp: RegExp = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g;\n\n  private replaceRegExp = /{{([^{}]*)}}/g;\n\n  constructor(parser: PixelParser) {\n    this.parserInstant = parser;\n  }\n\n  parse(tagString: string, data: IData): IParsedTag {\n    const attrReg = new RegExp(this.attrRegExp);\n    let attr: RegExpExecArray | null = null;\n    let cleanName = '';\n    let currentValue = '';\n    let isMod = -1;\n\n    const props: Props = {};\n    const events: EventHandler = new Map();\n    let isDisplay = true;\n    let listProps = null;\n\n    do {\n      attr = attrReg.exec(tagString);\n\n      if (attr) {\n        let type = '';\n        const [name, value] = attr[0].trim().split('=');\n        currentValue = value ? value.substring(1, value.length - 1) : '';\n        isMod = name.indexOf(':');\n\n        if (isMod !== -1) {\n          type = name.substring(0, isMod + 1);\n          cleanName = name.substring(isMod + 1);\n        }\n\n        if (!type) {\n          props[name] = currentValue;\n        } else if (type === PREFIXES.PROPS) {\n          this.setProps(props, cleanName, data, currentValue);\n        } else if (type === PREFIXES.BIND) {\n          const [store, path] = slicePropStorage(currentValue);\n          bindProps(props, cleanName, data[store], path);\n        } else if (type === PREFIXES.EVENT) {\n          const event = takePropInStore(currentValue, data);\n          events.set(cleanName, event as Function);\n        } else if (type === PREFIXES.CONDITION) {\n          const [store, path] = slicePropStorage(currentValue);\n          isDisplay = this.conditionHandler(cleanName, data[store], path, attr[0].trim());\n        } else if (type === PREFIXES.LIST) {\n          const [store, path] = slicePropStorage(currentValue);\n          listProps = this.listHandler(cleanName, data[store], path);\n        }\n      }\n    } while (attr);\n\n    return { props, tagName: this.getTagName(tagString), events, isDisplay, listProps };\n  }\n\n  setProps(props: Props, name: string, store: IData, valueString: string) {\n    const reg = new RegExp(this.replaceRegExp);\n    const temp = reg.exec(valueString);\n\n    const isReplaceValue = temp !== null && temp[0];\n    let value = '';\n    if (isReplaceValue) {\n      const replaceValue = takePropInStore(temp[1], store);\n      value = valueString.replace(temp[0], replaceValue as string);\n    } else {\n      value = takePropInStore(valueString, store, store.props) as string;\n    }\n\n    props[name] = value;\n  }\n\n  conditionHandler = <T>(type: string, store: T, path: string, fullValue: string) => {\n    let checkValue = '';\n\n    if (fullValue.indexOf('===') !== -1) {\n      const [_, newCheckValue] = fullValue\n        .split('\"')[1]\n        .split('===')\n        .map((string: string) => string.trim());\n\n      checkValue = newCheckValue;\n    }\n\n    const value: any = parseObjectPathTag(store, path);\n    let isTruthy = true;\n\n    if (checkValue) {\n      isTruthy = value === checkValue;\n    } else if (!value) {\n      isTruthy = false;\n    } else if (value && Array.isArray(value)) {\n      if (!value.length) {\n        isTruthy = false;\n      }\n    }\n\n    if ((isTruthy && type === 'truthy') || (!isTruthy && type !== 'truthy')) {\n      return true;\n    }\n\n    return false;\n  };\n\n  listHandler = <T>(name: string, store: T, valueString: string) => {\n    if (name === LIST_TYPE.OBJECT_ARRAY) {\n      return parseObjectPathTag(store, valueString) as Props;\n    }\n  };\n\n  getTagName = (tag: string) => tag.split(' ')[0].slice(1).trim().replace('>', '');\n}\n","import PixelParser from './parser';\nimport { pixelDOM, ParentNodeType, IInitiatedComponent, VComponentNode, Methods, Props } from '../pixelDom';\nimport { IParentData, IParsedTag } from './parser.type';\nimport { Pixel } from '../root';\n\nexport class ComponentParser {\n  parserInstance: PixelParser;\n\n  componentNameRegExp = /<\\/?[\\s*]?([^\\s]+?)[/\\s>]/;\n\n  tagRegExp = /<[a-zA-Z0-9\\-!/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g;\n\n  constructor(parser: PixelParser) {\n    this.parserInstance = parser;\n  }\n\n  parse(html: string, parentData?: IParentData): ParentNodeType[] | ParentNodeType | null {\n    try {\n      const { componentProps = {}, state = {}, methods = {} } = parentData || {};\n\n      const [notCleanName, componentName] = html.match(this.componentNameRegExp)!;\n      const componentConfig: IInitiatedComponent = Pixel.callComponentModel(componentName);\n\n      if (componentConfig.components) {\n        Pixel.registerComponents(componentConfig.components);\n      }\n\n      const componentParsedData = this.parserInstance.tagParser.parse(html.slice(notCleanName.length), {\n        props: componentProps,\n        state,\n        methods,\n      });\n\n      if (!componentParsedData.isDisplay) {\n        return null;\n      }\n\n      if (componentParsedData.listProps) {\n        return this.handleList(componentConfig, componentParsedData);\n      }\n\n      const component: VComponentNode = pixelDOM.nodeFabric.create(\n        componentConfig,\n        componentParsedData\n      ) as VComponentNode;\n\n      const componentParsedTag = this.parserInstance.parseHTML(componentConfig.template, {\n        componentProps: componentParsedData.props || {},\n        state: componentConfig.state || {},\n        methods: this.bindMethods(componentConfig.methods || {}, component),\n      });\n\n      component.init(componentParsedTag);\n\n      return component;\n    } catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  reParse(name: string, oldComponent: VComponentNode) {\n    const componentConfig: IInitiatedComponent = Pixel.callComponentModel(name);\n\n    componentConfig.state = oldComponent.state || componentConfig.state;\n\n    const component: VComponentNode = pixelDOM.nodeFabric.create(componentConfig, {\n      props: oldComponent.componentProps,\n    } as any) as VComponentNode;\n\n    const componentParsedTag = this.parserInstance.parseHTML(componentConfig.template, {\n      componentProps: component.componentProps || {},\n      state: componentConfig.state || {},\n      methods: this.bindMethods(componentConfig.methods || {}, oldComponent),\n    });\n\n    component.init(componentParsedTag);\n\n    return component;\n  }\n\n  bindMethods = (methods: Methods, self: VComponentNode) => {\n    const methodsEntries = Object.entries(methods);\n    return methodsEntries.reduce((acc: Methods, [key, value]: [string, Function]) => {\n      acc[key] = value.bind(self);\n      return acc;\n    }, {});\n  };\n\n  handleList = (config: IInitiatedComponent, data: IParsedTag) => {\n    const components = data.listProps.map(\n      (item: Props) =>\n        pixelDOM.nodeFabric.create(config, {\n          ...data,\n          props: { ...item, ...data.props },\n          events: data.events,\n        }) as VComponentNode\n    );\n\n    const componentsParsedTag = components.map((component: VComponentNode, index: number) =>\n      this.parserInstance.parseHTML(config.template, {\n        componentProps: { ...data.props, ...data.listProps[index] } || {},\n        state: config.state || {},\n        methods: this.bindMethods(config.methods || {}, component),\n      })\n    );\n\n    componentsParsedTag.forEach((tagConfig: ParentNodeType, index: number) => {\n      components[index].init(tagConfig);\n    });\n\n    return components;\n  };\n}\n","import Parser from './parser';\nimport { IData } from './parser.type';\nimport { pixelDOM, VTextNode } from '../pixelDom';\nimport { bindProps, slicePropStorage } from './utils';\n\nexport class TextParser {\n  private replaceRegExp = new RegExp(/{{([^{}]*)}}/g);\n\n  private parserInstant: Parser;\n\n  constructor(parserInstant: Parser) {\n    this.parserInstant = parserInstant;\n  }\n\n  parse(text: string, data: IData): VTextNode | null {\n    if (text.length) {\n      const reg = new RegExp(this.replaceRegExp);\n      const temp = reg.exec(text);\n\n      /* check for template replacement */\n      if (temp && temp[0]) {\n        const [store, path] = slicePropStorage(temp[1]);\n        const props = {};\n\n        bindProps(props, path, data[store], path);\n        return pixelDOM.nodeFabric.create({ props, text }) as VTextNode;\n      }\n\n      return pixelDOM.nodeFabric.create({ text }) as VTextNode;\n    }\n\n    return null;\n  }\n}\n","import { ParentNodeType, pixelDOM, VCommonNode, VirtualNode, VTextNode } from '../pixelDom';\nimport { Stack } from '../utils';\nimport { TagParser } from './tagParser';\nimport { ComponentParser } from './componentParser';\nimport { IData, IParentData } from './parser.type';\nimport { TextParser } from './textParser';\n\nexport default class PixelParser {\n  tagRegExp = /<[\\s*]?[a-zA-Z0-9\\-!/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g;\n\n  componentRegExp = /<[\\\\/]?[\\s*]?[A-Z\\-!](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g;\n\n  replaceRegExp = new RegExp(/{{([^{}]*)}}/g);\n\n  tagParser: TagParser;\n\n  componentParser: ComponentParser;\n\n  textParser: TextParser;\n\n  constructor() {\n    this.tagParser = new TagParser(this);\n    this.componentParser = new ComponentParser(this);\n    this.textParser = new TextParser(this);\n  }\n\n  parseHTML(html: string, parentProps?: IParentData): ParentNodeType {\n    const stack = new Stack<ParentNodeType>();\n    const ignoreStack = new Stack<ParentNodeType>();\n    const tagReg = new RegExp(this.tagRegExp);\n    let el = null;\n\n    const { componentProps = {}, state = {}, methods = {} } = parentProps || {};\n    const data: IData = { props: componentProps, state, methods };\n\n    do {\n      el = tagReg.exec(html);\n      if (el) {\n        const isIgnoreStackEmpty = ignoreStack.isEmpty();\n        const tag = el[0];\n        const { index } = el;\n\n        const isComponent = this.isComponent(tag);\n        const isXHTML = this.isXHTML(tag);\n        const isCloseTag = tag[1] === '/';\n\n        if (isComponent) {\n          if (isIgnoreStackEmpty) {\n            const component = this.componentParser.parse(tag, parentProps);\n\n            if (component && Array.isArray(component)) {\n              component.forEach((item) => this.addAsChild(stack, item));\n            } else if (component) {\n              this.addAsChild(stack, component);\n            }\n          }\n        } else if (isXHTML) {\n          if (isIgnoreStackEmpty) {\n            const parsedTag = this.tagParser.parse(tag, data);\n\n            if (parsedTag.isDisplay) {\n              const node: VCommonNode = pixelDOM.nodeFabric.create(parsedTag) as VCommonNode;\n\n              this.addAsChild(stack, node);\n            }\n          }\n        } else if (isCloseTag) {\n          if (isIgnoreStackEmpty) {\n            const node = stack.pop();\n\n            this.addAsChild(stack, node);\n          } else {\n            ignoreStack.pop();\n          }\n        } else {\n          let textNode = null;\n          const start = index + tag.trim().length;\n          const nextChar = html[start];\n\n          const parsedTag = this.tagParser.parse(tag, data);\n          const node: VCommonNode = pixelDOM.nodeFabric.create(parsedTag) as VCommonNode;\n\n          if (nextChar && nextChar !== '<') {\n            const text = html.slice(start, html.indexOf('<', start)).trim();\n            textNode = this.textParser.parse(text, data);\n          }\n\n          if (isIgnoreStackEmpty && parsedTag.isDisplay) {\n            stack.push(node);\n\n            if (textNode) {\n              this.addAsChild(stack, textNode);\n            }\n          } else {\n            ignoreStack.push(node);\n          }\n        }\n      }\n    } while (el);\n\n    return stack.pop();\n  }\n\n  addAsChild = (stack: Stack<ParentNodeType>, node: VirtualNode) => {\n    const parent = stack.peek();\n\n    if (parent) {\n      parent.children.push(node);\n    } else if (!(node instanceof VTextNode)) {\n      stack.push(node);\n    }\n  };\n\n  isComponent = (tag: string) => tag.match(this.componentRegExp);\n\n  isXHTML = (tag: string) => tag[tag.length - 2] === '/';\n}\n\nexport const Parser = new PixelParser();\n","export { Parser } from './parser';\nexport { IParsedTag } from './parser.type';\n","export { IParsedTag } from './parser';\nexport { Store } from './store';\nexport { IDefaultRoute, IRouterState, IRoutesConfig, Router } from './router';\nexport { PixelRouter, PixelStore, Pixel } from './root';\nexport { IComponentModel } from './pixelDom';\n","import { IValidatorConfig } from './FormValidator.type';\n\nclass Validator {\n  static ERROR_MESSAGES: Record<string, string> = {\n    empty: 'Поле не может быть пустым',\n    password: 'Пароль не проходит условия',\n    text: 'Минимум 3 лат. буквы',\n    tel: 'Не правильный формат телефонного номера',\n    email: 'Не похоже на почту ',\n    compare: 'Значение полей не совпадает',\n  };\n\n  rules: Record<string, RegExp> = {\n    /* eslint max-len: \"off\" */\n    email:\n      /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/,\n    password:\n      /(?=[#$-/:-?{-~!\"^_`[\\]a-zA-Z]*([0-9#$-/:-?{-~!\"^_`[\\]]))(?=[#$-/:-?{-~!\"^_`[\\]a-zA-Z0-9]*[a-zA-Z])[#$-/:-?{-~!\"^_`[\\]a-zA-Z0-9]{4,}/,\n    text: /\\w*/,\n    tel: /^((8|\\+7)[- ]?)?(\\(?\\d{3}\\)?[- ]?)?[\\d\\- ]{7,10}$/,\n  };\n\n  validate(state: any, config: IValidatorConfig, fieldsType: Record<string, string | Record<string, string>>) {\n    let isFullValid = true;\n\n    Object.keys(fieldsType)\n      .filter((type) => type)\n      .forEach((field) => {\n        const typeConfig = fieldsType[field];\n        const fieldValue = state[config.form][field] ? state[config.form][field].toString().trim() : '';\n\n        if (!fieldValue) {\n          if (!config.ignoreEmpty) {\n            isFullValid = false;\n            state[config.errors][field] = Validator.ERROR_MESSAGES.empty;\n          }\n        } else if (typeof typeConfig === 'object') {\n          this.handleUncommon(\n            typeConfig,\n            state[config.form] as Record<string, string>,\n            state[config.errors] as Record<string, string>\n          );\n        } else {\n          const isValid = this.rules[typeConfig].test(fieldValue);\n\n          if (!isValid) {\n            isFullValid = false;\n            state[config.errors][field] = this.setErrorMessage(typeConfig);\n          } else {\n            state[config.errors][field] = '';\n          }\n        }\n      });\n\n    return isFullValid;\n  }\n\n  handleUncommon(config: Record<string, string>, state: Record<string, string>, errors: Record<string, string>) {\n    const { type } = config;\n    const value = state[config.field];\n\n    const isValid = this.rules[type].test(value.toString());\n\n    if (!isValid) {\n      state[config.field] = this.setErrorMessage(type);\n    } else if (config.compare) {\n      if (state[config.field] === state[config.compare]) {\n        errors[config.field] = '';\n\n        /*  prettier-ignore */\n        if (\n          !errors[config.compare].length\n          || (errors[config.compare].length && errors[config.compare] === Validator.ERROR_MESSAGES.compare)\n        ) {\n          errors[config.compare] = '';\n        }\n      } else {\n        errors[config.field] = Validator.ERROR_MESSAGES.compare;\n        errors[config.compare] = Validator.ERROR_MESSAGES.compare;\n      }\n    }\n\n    return !!errors[config.field].length;\n  }\n\n  setErrorMessage = (type: string): string => Validator.ERROR_MESSAGES[type];\n}\n\nexport const FormValidator = new Validator();\n","export { FormValidator } from './FormValidator';\nexport { IValidatorConfig } from './FormValidator.type';\n","class DateHandler {\n  parseDate(date: string | Date) {\n    const localDate = this.convertToDate(date);\n\n    const weekday = new Intl.DateTimeFormat('ru-RU', { weekday: 'short' }).format(localDate);\n    const day = this.convertToDateString(localDate.getDate());\n    const month = this.convertToDateString(localDate.getMonth() + 1);\n    const year = localDate.getFullYear().toString();\n    const hours = localDate.getHours();\n    const minuts = localDate.getMinutes();\n    const seconds = localDate.getSeconds();\n\n    return {\n      weekday,\n      day,\n      month,\n      year,\n      hours,\n      minuts,\n      seconds,\n    };\n  }\n\n  parseToChatFormat(isoDate: string) {\n    const date = this.parseDate(isoDate);\n    const currentDate = this.parseDate(new Date());\n    const dayDiff = Number(currentDate.day) - Number(date.day);\n\n    if (date.year === currentDate.year && date.month === currentDate.month && date.day === currentDate.day) {\n      return `${date.hours}:${date.minuts}`;\n    }\n\n    if (date.year === currentDate.year && date.month === currentDate.month && dayDiff === 1) {\n      return 'вчера';\n    }\n\n    if (date.year === currentDate.year && date.month === currentDate.month && dayDiff > 1 && dayDiff < 5) {\n      return date.weekday;\n    }\n\n    if (date.year === currentDate.year) {\n      return `${date.day}.${date.month}`;\n    }\n\n    return `${date.day}.${date.month}.${date.year}`;\n  }\n\n  convertToDateString = (value: number) => {\n    const localValue = value.toString();\n\n    if (localValue.length === 1) {\n      return `0${localValue}`;\n    }\n\n    return localValue;\n  };\n\n  convertToDate = (date: string | Date) => {\n    if (typeof date === 'string') {\n      return new Date(date);\n    }\n\n    return date;\n  };\n\n  convertWeekDay = (date: string | Date) => {\n    if (typeof date === 'string') {\n      return new Date(date);\n    }\n\n    return date;\n  };\n}\n\nexport const dateHandler = new DateHandler();\n","export { dateHandler } from './dateHandler';\n","export enum METHODS {\n  GET = 'GET',\n  PUT = 'PUT',\n  POST = 'POST',\n  DELETE = 'DELETE',\n}\n","import { METHODS } from './methods.enum';\nimport { IRequestOptions, IXMLHttpRequestOptions } from './HTTPTransport.type';\n\nfunction parseObject(obj: Record<string, object>) {\n  return Object.entries(obj).reduce((acc: string, [key, value]: [string, any]) => {\n    if (typeof value !== 'object') {\n      acc += `&${key}=${value}`;\n    } else if (Array.isArray(value)) {\n      acc += `&${key}=${value.join(',')}`;\n    } else if (typeof value === 'object' && value !== null) {\n      acc += `${parseObject(value)}`;\n    }\n\n    return acc;\n  }, '');\n}\n\nfunction queryStringify(data: string | Record<string, object>) {\n  if (typeof data === 'string') {\n    if (data.startsWith('?')) {\n      return data;\n    }\n    return `? + ${data}`;\n  }\n\n  const query = parseObject(data);\n\n  if (query.length) {\n    return `?${query.substring(1)}`;\n  }\n\n  return '';\n}\n\nexport class HTTPTransport {\n  baseUrl: string;\n\n  baseHeaders: Record<string, string>;\n\n  constructor(base: string, baseHeaders: Record<string, string>) {\n    this.baseUrl = base;\n    this.baseHeaders = baseHeaders;\n  }\n\n  get = <T>(url: string = '', options: IRequestOptions = {}): Promise<T> => {\n    let currentUrl = url;\n\n    if (options.data) {\n      currentUrl = url + queryStringify(options.data);\n    }\n\n    return this.request(currentUrl, { ...options, method: METHODS.GET }, options.timeout) as Promise<T>;\n  };\n\n  put<T>(url: string = '', options: IRequestOptions = {}): Promise<T> {\n    return this.request(url, { ...options, method: METHODS.PUT }, options.timeout) as Promise<T>;\n  }\n\n  post<T>(url: string = '', options: IRequestOptions = {}): Promise<T> {\n    return this.request(url, { ...options, method: METHODS.POST }, options.timeout) as Promise<T>;\n  }\n\n  delete<T>(url: string = '', options: IRequestOptions = {}): Promise<T> {\n    return this.request(url, { ...options, method: METHODS.DELETE }, options.timeout) as Promise<T>;\n  }\n\n  request(url: string = '', options: IXMLHttpRequestOptions, timeout = 5000) {\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      xhr.open(options.method, this.baseUrl + url);\n      xhr.withCredentials = true;\n\n      options.headers = { ...this.baseHeaders, ...options.headers };\n\n      if (options && !options.isNoHeader && options.headers) {\n        Object.keys(options.headers).forEach((key) => {\n          xhr.setRequestHeader(key, options.headers![key]);\n        });\n      }\n\n      if (timeout) {\n        xhr.timeout = timeout;\n      }\n\n      xhr.onload = () => {\n        if (xhr.status >= 200 && xhr.status < 300) {\n          try {\n            const parsed = xhr.response ? JSON.parse(xhr.response) : '';\n            resolve(parsed);\n          } catch (error) {\n            resolve('');\n          }\n        } else {\n          try {\n            reject(JSON.parse(xhr.response));\n          } catch {\n            reject(xhr.response);\n          }\n        }\n      };\n\n      xhr.onabort = reject;\n      xhr.ontimeout = reject;\n      xhr.onerror = reject;\n\n      if (options.method === METHODS.GET || !options.data) {\n        xhr.send();\n      } else if (!options.isNoHeader) {\n        xhr.send(JSON.stringify(options.data ? options.data : {}));\n      } else {\n        xhr.send(options.data ? options.data : {});\n      }\n    });\n  }\n}\n","export { HTTPTransport } from './HTTPTransport';\n","export { generateUniqId } from './helpers';\nexport { IComponentModel, Pixel, PixelRouter, PixelStore } from './pixel';\nexport { FormValidator, IValidatorConfig } from './formValidator';\nexport { dateHandler } from './date-handler';\nexport { HTTPTransport } from './http';\n","import { HTTPTransport } from '../utils';\nimport { BASE } from './const';\n\nexport class BaseAPI {\n  http: HTTPTransport;\n\n  constructor(path: string, defaultBase: string = BASE) {\n    this.http = new HTTPTransport(defaultBase + path, {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Credentials': true,\n    });\n  }\n}\n","import { IUser } from '../interfaces';\nimport { IChatUserAction } from '../interfaces/IUser';\nimport { IChat } from '../modules/Messanger/messanger.type';\nimport { BaseAPI } from './base-api';\n\nclass ChatAPI extends BaseAPI {\n  get(): Promise<any> {\n    return this.http.get('');\n  }\n\n  getSingle(id: number): Promise<any> {\n    return this.http.post(`/token/${id}`);\n  }\n\n  create(data: Record<string, string>): Promise<{ id: number }> {\n    return this.http.post('', { data });\n  }\n\n  delete(data: Record<string, number>) {\n    return this.http.delete('', { data });\n  }\n\n  uploadAvatar(data: FormData): Promise<IChat> {\n    return this.http.put('/avatar', { isNoHeader: true, data });\n  }\n\n  getUsers(id: number): Promise<IUser[]> {\n    return this.http.get(`/${id}/users`);\n  }\n\n  addUser(data: IChatUserAction) {\n    return this.http.put('/users', { data });\n  }\n\n  deleteUser(data: IChatUserAction) {\n    return this.http.delete('/users', { data });\n  }\n}\n\nexport const chatAPI = new ChatAPI('/chats');\n","import { IUser } from '../pages';\nimport { IRegistrationForm } from '../pages/Auth/auth.type';\nimport { BaseAPI } from './base-api';\n\nclass AuthAPI extends BaseAPI {\n  getUserData(): Promise<IUser> {\n    return this.http.get('/user');\n  }\n\n  register(data: IRegistrationForm) {\n    return this.http.post('/signup', { data });\n  }\n\n  login(data: Record<string, string>) {\n    return this.http.post('/signin', { data });\n  }\n\n  logout() {\n    return this.http.post('/logout');\n  }\n}\n\nexport const authAPI = new AuthAPI('/auth');\n","import { BaseAPI } from './base-api';\nimport { IUser } from '../interfaces';\n\nclass UserAPI extends BaseAPI {\n  changeProfile(data: IUser): Promise<IUser> {\n    return this.http.put('/profile', { data });\n  }\n\n  changePassword(data: Record<string, string>): Promise<void> {\n    return this.http.put('/password', { data });\n  }\n\n  changeAvatar(formData: FormData): Promise<IUser> {\n    return this.http.put('/profile/avatar', {\n      isNoHeader: true,\n      data: formData,\n    });\n  }\n}\n\nexport const userAPI = new UserAPI('/user');\n","import {\n  IEventsCallbacks,\n  IMessage,\n  IMessageEvent,\n  IPayload,\n  MessageEventCallback,\n  CloseEventCallback,\n} from '../interfaces';\nimport { IChat } from '../modules/Messanger/messanger.type';\n\nexport class ChatWebSocket {\n  static TYPES = {\n    MESSAGE: 'message',\n    MESSAGES_HISTORY: 'get old',\n  };\n\n  socket: WebSocket;\n\n  chat: IChat;\n\n  constructor(userId: number, chat: IChat, token: string, callbacks?: IEventsCallbacks) {\n    this.socket = new WebSocket(`wss://ya-praktikum.tech/ws/chats/${userId}/${chat.id}/${token}`);\n\n    this.socket.addEventListener('open', this.openHandler.bind(this, callbacks?.openCB));\n\n    this.socket.addEventListener('close', this.closeHandler.bind(this, callbacks?.closeCB));\n\n    this.socket.addEventListener('message', this.messageHandler.bind(this, callbacks?.messageCB));\n\n    this.socket.addEventListener('error', this.errorHandler.bind(this, callbacks?.errorCB));\n\n    this.chat = { ...chat, messages: [] };\n  }\n\n  openHandler = () => {\n    this.sendMessage('0', ChatWebSocket.TYPES.MESSAGES_HISTORY);\n  };\n\n  messageHandler = (callback: MessageEventCallback, event: IMessageEvent) => {\n    const data: Record<string, string> | IMessage[] | IMessage = event.data ? JSON.parse(event.data) : '';\n    if ((data && Array.isArray(data)) || data.type !== 'pong') {\n      callback(this.chat.id, data);\n    }\n  };\n\n  errorHandler = (event: any) => {};\n\n  closeHandler = (callback: CloseEventCallback, event: any) => {\n    if (event.wasClean) {\n      console.log('Соединение закрыто чисто');\n    } else {\n      console.log('Обрыв соединения');\n    }\n  };\n\n  sendMessage(content: string, type: string = ChatWebSocket.TYPES.MESSAGE) {\n    const payload: IPayload = { type };\n\n    if (content) {\n      payload.content = content;\n    }\n\n    this.socket.send(JSON.stringify(payload));\n  }\n}\n","export { BASE } from './const';\nexport { chatAPI } from './chat.api';\nexport { authAPI } from './auth.api';\nexport { userAPI } from './user.api';\nexport { ChatWebSocket } from './chat-web-socket.api';\n","import { authAPI } from '../api';\nimport { PixelStore } from '../utils';\n\nexport class CookieAuthController {\n  checkAuth = async () => {\n    try {\n      const userData = await authAPI.getUserData();\n      PixelStore.setUserData({ ...userData, isAuth: true });\n      PixelStore.dispatch('currentUser', { ...userData });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n","import { messagesController } from '.';\nimport { chatAPI } from '../api';\nimport { PixelStore } from '../utils/pixel';\n\nexport class ChatController {\n  getChats = async () => {\n    try {\n      const chats = await chatAPI.get();\n      messagesController.init(chats);\n\n      PixelStore.dispatch('chats', []);\n\n      setTimeout(() => {\n        PixelStore.dispatch('chats', messagesController.chats);\n      }, 300);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  createChat = async (data: Record<string, any>) => {\n    try {\n      if (!data.title.trim()) {\n        throw Error('Поле должно быть заполнено');\n      }\n\n      await chatAPI.create({ title: data.title });\n\n      data.error = '';\n      data.title = '';\n\n      await this.getChats();\n    } catch (error) {\n      data.error = 'Поле должно быть заполнено';\n    }\n  };\n}\n","import { authAPI } from '../api';\nimport { PixelStore } from '../utils';\n\nexport class AuthController {\n  checkAuth = async () => {\n    try {\n      const userData = await authAPI.getUserData();\n      PixelStore.setUserData({ ...userData, isAuth: true });\n      PixelStore.dispatch('currentUser', { ...userData });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  logout = async () => {\n    try {\n      await authAPI.logout();\n      PixelStore.setUserData({ isAuth: false });\n      PixelStore.dispatch('currentUser', {});\n    } catch (error) {\n      console.error(error);\n    }\n  };\n}\n","import { chatAPI, ChatWebSocket } from '../api';\nimport { IMessage, IUser } from '../interfaces';\nimport { IChat } from '../modules/Messanger/messanger.type';\nimport { dateHandler, PixelStore } from '../utils';\n\nclass MessagesController {\n  static TYPES = {\n    PING: 'ping',\n  };\n\n  sockets: Map<number, ChatWebSocket> = new Map();\n\n  chatInArray: Map<number, number> = new Map();\n\n  chats: IChat[];\n\n  users: Map<number, IUser> = new Map();\n\n  timer: unknown;\n\n  constructor() {\n    this.timer = setInterval(() => {\n      this.pingPong();\n    }, 25000);\n  }\n\n  initSocket(userId: number, chat: IChat, token: string) {\n    const socket = new ChatWebSocket(userId, chat, token, { messageCB: this.onMessage.bind(this) });\n    this.sockets.set(chat.id, socket);\n  }\n\n  onMessage(chatId: number, wsMessage: IMessage[] | IMessage) {\n    const { messages, lastMessage } = this.convertMessages(wsMessage);\n    this.chats[this.chatInArray.get(chatId)!].messages.push(...messages);\n    this.chats[this.chatInArray.get(chatId)!].lastMessage = lastMessage;\n\n    PixelStore.dispatch('chats', this.chats);\n    if (PixelStore.store.selectedChat && PixelStore.store.selectedChat.id === chatId) {\n      PixelStore.dispatch('selectedChat', this.chats[this.chatInArray.get(chatId)!]);\n    }\n  }\n\n  pingPong() {\n    this.sockets.forEach((socket) => {\n      socket.sendMessage('', MessagesController.TYPES.PING);\n    });\n  }\n\n  send(chatId: number, message: string) {\n    this.sockets.get(chatId)?.sendMessage(message);\n  }\n\n  init = async (chats: IChat[]) => {\n    const { id } = PixelStore.currentUser;\n    const chatsToInit: { chatId: number; tokenReq: Promise<any> }[] = [];\n    const chatUsers: { chatId: number; userReq: Promise<any> }[] = [];\n    const usedChats = new Map();\n\n    chats.forEach((chat) => {\n      if (!this.sockets.has(chat.id)) {\n        chatsToInit.push({ chatId: chat.id, tokenReq: chatAPI.getSingle(chat.id) });\n        chatUsers.push({ chatId: chat.id, userReq: chatAPI.getUsers(chat.id) });\n      }\n\n      usedChats.set(chat.id, chat);\n    });\n\n    const tokens: { token: string }[] = await Promise.all(chatsToInit.map((chatConf) => chatConf.tokenReq));\n    const users: IUser[][] = await Promise.all(chatUsers.map((chatConf) => chatConf.userReq));\n\n    chatsToInit.forEach((chat, index) => {\n      this.initSocket(id, usedChats.get(chat.chatId), tokens[index].token);\n    });\n\n    this.chatInArray.clear();\n    this.clearSockets(usedChats);\n    this.chats = [];\n\n    let i = 0;\n    for (const item of this.sockets) {\n      this.chatInArray.set(item[1].chat.id, i);\n      item[1].chat.users = this.convertUsers(users[i]);\n      item[1].chat.index = i;\n      this.chats.push(item[1].chat);\n      i += 1;\n    }\n  };\n\n  clearSockets(usedChats: Map<number, IChat>) {\n    this.sockets.forEach((socket, key: number) => {\n      if (!usedChats.has(key)) {\n        socket.socket.close();\n        this.sockets.delete(key);\n      }\n    });\n  }\n\n  convertUsers(users: IUser[]) {\n    if (users) {\n      return users.map((user) => {\n        this.users.set(user.id, user);\n        return user;\n      });\n    }\n\n    return [];\n  }\n\n  convertMessages = (messages: IMessage | IMessage[]) => {\n    const { id } = PixelStore.currentUser;\n    const toConvert = Array.isArray(messages) ? messages.reverse() : [messages];\n\n    const converted = toConvert.map((message) => {\n      const time = dateHandler.parseToChatFormat(message.time);\n      const user = this.users.get(message.user_id);\n      const isAuthor = user?.id === id;\n\n      return {\n        ...message,\n        isAuthor,\n        time,\n        avatar: user?.avatar,\n        name: user?.display_name ? user.display_name : user?.login,\n      };\n    });\n    let lastMessage = null;\n\n    if (converted.length && converted.length > 1) {\n      lastMessage = converted[converted.length - 1];\n    } else if (converted.length) {\n      lastMessage = converted[0];\n    }\n\n    return {\n      messages: converted,\n      lastMessage,\n    };\n  };\n}\n\nexport const messagesController = new MessagesController();\n","export { CookieAuthController } from './cookie-auth.controller';\nexport { ChatController } from './chat.controller';\nexport { AuthController } from './auth.controller';\nexport { messagesController } from './messages.controller';\n","import { Modal, Input, Button } from '../../../../components';\nimport { IComponentModel } from '../../../../utils';\nimport { CustomEventTarget } from '../../../../interfaces';\nimport { ChatController } from '../../../../controllers';\n\nconst chatController = new ChatController();\n\nexport function CreateModal(): IComponentModel {\n  return {\n    state: {\n      title: '',\n      error: '',\n    },\n    components: {\n      Input,\n      Button,\n    },\n    methods: {\n      close(event: any) {\n        event.preventDefault();\n        this.props.closeModal();\n      },\n      chatInputHandler(event: CustomEventTarget<HTMLInputElement>) {\n        const { name, value } = event.target;\n        this.state[name] = value;\n      },\n      createChatSubmitForm(event: Event) {\n        event.preventDefault();\n        chatController.createChat(this.state);\n        this.componentProps.modalClose();\n      },\n      handleEsc(event: KeyboardEvent) {\n        if (event.key === 'Escape') {\n          this.componentProps.modalClose();\n        }\n      },\n    },\n    componentDidMount() {\n      this.methods.handleEsc = this.methods.handleEsc.bind(this);\n      window.addEventListener('keydown', this.methods.handleEsc);\n    },\n    componentWillUnmount() {\n      window.removeEventListener('keydown', this.methods.handleEsc);\n    },\n    template: /* html */ `\n    ${\n      Modal(/* html */ `\n      <form class=\"create-chat__form\" id=\"id-create-chat\">\n        <Input \n          label=\"Название чата\"\n          name=\"title\" \n          type=\"text\" \n          id=\"create_chat_title\" \n          b:onChange=\"methods.chatInputHandler\" \n          b:error=\"state.error\"\n          b:value=\"state.title\" />\n\n        <footer class=\"modal-window__footer\">\n          <Button \n            text=\"ОК\" \n            class=\"button_accent button_accent-short\" \n            type=\"button\" \n            b:onClick=\"methods.createChatSubmitForm\" \n            form=\"id-create-chat\"/>\n        </footer>\n      </form>\n    `).template\n    }\n    `,\n  };\n}\n","import { IComponentModel } from '../../../../../utils';\n\nexport function ProfileRow(): IComponentModel {\n  return {\n    template: /* html */ `\n      <div class=\"profile-row\">\n        <span p:class=\"profile-row__title profile-row__title_{{props.titleClass}}\">{{props.title}}</span>\n        <div class=\"profile-row__value\">{{props.value}}</div>\n      </div>\n    `,\n  };\n}\n","import { IComponentModel } from '../../../../../utils';\nimport { ProfileRow } from './ProfileRow';\nimport { UserPhoto } from '../../../../../components';\n\nexport function ProfileInfo(): IComponentModel {\n  return {\n    components: {\n      ProfileRow,\n      UserPhoto,\n    },\n    template: /* html */ `\n    <div class=\"profile__body\">\n      <div class=\"profile__info-title\">\n        <UserPhoto b:photo=\"props.user.avatar\" containerClass=\"profile__avatar-container\" />\n        <div class=\"profile__user-container\">\n          <div class=\"profile__user-title\">\n            <span>{{props.user.first_name}}</span>  \n            <span>{{props.user.second_name}}</span>\n          </div>\n          <ProfileRow title=\"Отображаемое имя\" b:value=\"props.user.display_name\" titleClass=\"low\" />\n        </div>\n      </div>\n      <ProfileRow title=\"Почта\" b:value=\"props.user.email\" />\n      <ProfileRow title=\"Логин\" b:value=\"props.user.login\" />\n      <ProfileRow title=\"Телефон\" b:value=\"props.user.phone\" />\n    </div>\n    }\n  `,\n  };\n}\n","export const FIELD_TYPE = {\n  login: 'text',\n  email: 'email',\n  first_name: 'text',\n  second_name: 'text',\n  display_name: 'text',\n  phone: 'tel',\n};\n\nexport const FIELD_TYPE_FULL = {\n  login: 'text',\n  email: 'email',\n  first_name: 'text',\n  second_name: 'text',\n  display_name: 'text',\n  phone: 'tel',\n  oldPassword: 'password',\n  newPassword: 'password',\n  passwordRepeat: {\n    compare: 'newPassword',\n    type: 'password',\n    field: 'passwordRepeat',\n  },\n};\n","import { IUser } from '../../../../../interfaces';\nimport { FormValidator, PixelStore } from '../../../../../utils';\nimport { FIELD_TYPE_FULL, FIELD_TYPE } from './const';\nimport { userAPI } from '../../../../../api';\nimport { VComponentNode } from '../../../../../utils/pixel/pixelDom';\n\nconst validConfig = { form: 'formFields', errors: 'errors' };\n\nenum ERRORS {\n  NV = 'Form is not valid',\n}\n\nexport class ProfileEditController {\n  update = async (comp: VComponentNode) => {\n    try {\n      const { state } = comp;\n      const type = state.isPasswordEdit ? FIELD_TYPE_FULL : FIELD_TYPE;\n      const isValid = FormValidator.validate(state, validConfig, type);\n\n      if (!isValid) {\n        throw Error(ERRORS.NV);\n      }\n\n      const newData = await userAPI.changeProfile(state.formFields);\n\n      PixelStore.setUserData({ ...newData });\n      PixelStore.dispatch('currentUser', { ...newData });\n\n      if (state.isPasswordEdit) {\n        const { oldPassword, newPassword } = state.formFields as any;\n        await userAPI.changePassword({ oldPassword, newPassword });\n      }\n\n      comp.componentProps.onClose();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateAvatar = async (event: any, component: VComponentNode) => {\n    const newForm = new FormData();\n    newForm.append('avatar', event.target.files[0]);\n    const user = await userAPI.changeAvatar(newForm);\n    PixelStore.dispatch('currentUser', user);\n    component.state.formFields.avatar = user.avatar;\n  };\n}\n","import { FormValidator, IComponentModel } from '../../../../../utils';\nimport { Input, Button, UserPhoto } from '../../../../../components';\nimport { CustomEventTarget } from '../../../../../interfaces';\nimport { FIELD_TYPE, FIELD_TYPE_FULL } from './const';\nimport { ProfileEditController } from './profile-edit.controller';\n\nconst validConfig = { form: 'formFields', errors: 'errors' };\nconst profileEditController = new ProfileEditController();\n\nexport function ProfileEdit(): IComponentModel {\n  const profileForm = 'id-profile_form';\n  return {\n    state: {\n      isPasswordEdit: false,\n      formFields: {\n        avatar: '',\n        email: '',\n        login: '',\n        first_name: '',\n        second_name: '',\n        display_name: '',\n        phone: '',\n        oldPassword: '',\n        newPassword: '',\n        passwordRepeat: '',\n      },\n\n      errors: {\n        email: '',\n        login: '',\n        first_name: '',\n        second_name: '',\n        display_name: '',\n        phone: '',\n        oldPassword: '',\n        newPassword: '',\n        passwordRepeat: '',\n      },\n    },\n    methods: {\n      formFocusHandler() {\n        const type = this.state.isPasswordEdit ? FIELD_TYPE_FULL : FIELD_TYPE;\n        FormValidator.validate(this.state, validConfig, type);\n      },\n      formBlurHandler() {\n        const type = this.state.isPasswordEdit ? FIELD_TYPE_FULL : FIELD_TYPE;\n        FormValidator.validate(this.state, validConfig, type);\n      },\n      submitForm(event: Event) {\n        event.preventDefault();\n        profileEditController.update(this);\n      },\n      inputHandler(event: CustomEventTarget<HTMLInputElement>) {\n        const { name, value } = event.target;\n        this.state.formFields[name] = value;\n      },\n      changePassword(event: Event) {\n        event.preventDefault();\n        this.state.isPasswordEdit = !this.state.isPasswordEdit;\n      },\n      handlePhotoChange(event: Event) {\n        event.preventDefault();\n        profileEditController.updateAvatar(event, this);\n      },\n    },\n    components: {\n      Input,\n      Button,\n      UserPhoto,\n    },\n    componentDidMount() {\n      const { user } = this.componentProps;\n\n      for (const key in user) {\n        if (key in this.state.formFields) {\n          this.state.formFields[key] = user[key];\n        }\n      }\n    },\n    template: /* html */ `\n      <form \n        class=\"profile-form\" \n        e:submit=\"methods.submitForm\" \n        e:focus=\"methods.formFocusHandler\" \n        e:blur=\"methods.formBlurHandler\" \n        id=\"${profileForm}\" >\n\n        <div class=\"profile-form__body\">\n          <div class=\"profile-form__row\">\n            <UserPhoto \n              b:photo=\"state.formFields.avatar\" \n              containerClass=\"profile__avatar-container profile__avatar-container_edit\" \n              inputId=\"profile_change_photo\"\n              b:onChange=\"methods.handlePhotoChange\"\n            />\n\n            <div class=\"profile-form__column\">\n              <div class=\"profile-form__row\">\n                <Input \n                  label=\"Имя\" \n                  name=\"first_name\" \n                  type=\"text\" \n                  id=\"profile_firstName\" \n                  b:value=\"state.formFields.first_name\"\n                  loginClass=\"login--shadow\"\n                  b:error=\"state.errors.first_name\"\n                  b:onChange=\"methods.inputHandler\"\n                />\n\n                <Input \n                  label=\"Фамилия\" \n                  name=\"second_name\" \n                  type=\"text\" \n                  id=\"profile_secondName\" \n                  b:value=\"state.formFields.second_name\"\n                  loginClass=\"login--shadow\"\n                  b:error=\"state.errors.second_name\"\n                  b:onChange=\"methods.inputHandler\"\n                />\n              </div>\n\n              <Input \n                label=\"Отображаемое имя\" \n                name=\"display_name\" \n                type=\"text\" \n                id=\"profile_display_name\" \n                b:value=\"state.formFields.display_name\"\n                loginClass=\"login--shadow\"\n                b:error=\"state.errors.display_name\"\n                b:onChange=\"methods.inputHandler\"\n              />\n            </div>\n            \n          </div>\n\n          <div class=\"profile-form__row\">\n            <Input \n              label=\"Почта\" \n              name=\"email\" \n              type=\"email\" \n              id=\"profile_mail\" \n              b:value=\"state.formFields.email\"\n              loginClass=\"login--shadow\"\n              b:error=\"state.errors.email\"\n              b:onChange=\"methods.inputHandler\"\n            />\n\n            <Input \n              label=\"Логин\" \n              name=\"login\" \n              type=\"text\" \n              id=\"profile_login\" \n              b:value=\"state.formFields.login\"\n              loginClass=\"login--shadow\"\n              b:error=\"state.errors.login\"\n              b:onChange=\"methods.inputHandler\"\n            />\n          </div>\n\n          <div class=\"profile-form__row profile-form__row_half-width\">\n            <Input \n              label=\"Телефон\" \n              name=\"phone\" \n              type=\"tel\" \n              id=\"profile_phoneNumber\" \n              b:value=\"state.formFields.phone\"\n              loginClass=\"login--shadow\"\n              b:error=\"state.errors.phone\"\n              b:onChange=\"methods.inputHandler\"\n            />\n          </div>\n        \n\n          <span class=\"button_text button_separator\" e:click=\"methods.changePassword\">Изменить пароль</span>\n\n          <div if:truthy=\"state.isPasswordEdit\" class=\"profile-form__body\">\n            <div class=\"profile-form__row profile-form__row_half-width\">\n              <Input \n                label=\"Пароль\" \n                name=\"oldPassword\" \n                type=\"password\" \n                id=\"profile_current_password\" \n                b:value=\"state.formFields.oldPassword\"\n                b:error=\"state.errors.oldPassword\"\n                b:onChange=\"methods.inputHandler\"\n              />\n            </div>\n            \n            <div class=\"profile-form__row\">\n              <Input \n                label=\"Новый Пароль\" \n                name=\"newPassword\" \n                type=\"password\" \n                id=\"profile_next_password\" \n                b:value=\"state.formFields.newPassword\"\n                b:error=\"state.errors.newPassword\"\n                b:onChange=\"methods.inputHandler\"\n              />\n\n              <Input \n                label=\"Повторите пароль\" \n                name=\"passwordRepeat\" \n                type=\"password\" \n                id=\"profile_repeat_password\" \n                b:value=\"state.formFields.passwordRepeat\"\n                b:error=\"state.errors.passwordRepeat\"\n                b:onChange=\"methods.inputHandler\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <footer class=\"auth-form__footer\">\n          <Button \n            text=\"Сохранить\" \n            class=\"button_accent\" \n            type=\"submit\" \n            form=\"${profileForm}\"\n            b:onClick=\"methods.submitForm\" \n          />\n        </footer>\n      </form>\n    `,\n  };\n}\n","import { IComponentModel } from '../../../../../utils';\nimport { UserPhoto, Button, Modal } from '../../../../../components';\nimport { ProfileInfo } from './ProfileInfo';\nimport { ProfileEdit } from './ProfileEdit';\nimport edit from '../../../../../../static/assets/images/Icon/EditBtn.svg';\nimport storEdit from '../../../../../../static/assets/images/Icon/stopEdit.svg';\nimport './Profile.css';\n\nexport function Profile(): IComponentModel {\n  return {\n    state: {\n      isEditable: false,\n      currentUser: {},\n    },\n    components: {\n      UserPhoto,\n      Button,\n      ProfileInfo,\n      ProfileEdit,\n    },\n    methods: {\n      editHander() {\n        this.state.isEditable = !this.state.isEditable;\n      },\n      handleEsc(event: KeyboardEvent) {\n        if (event.key === 'Escape') {\n          this.componentProps.modalClose();\n        }\n      },\n    },\n    componentDidMount() {\n      this.methods.handleEsc = this.methods.handleEsc.bind(this);\n      window.addEventListener('keydown', this.methods.handleEsc);\n    },\n    componentWillUnmount() {\n      window.removeEventListener('keydown', this.methods.handleEsc);\n    },\n    pixelStore: ['currentUser'],\n    template: /* html */ `\n    ${\n      Modal(\n        /* html */ `\n          <ProfileInfo if:falsy=\"state.isEditable\"  b:user=\"state.currentUser\" />\n          <ProfileEdit if:truthy=\"state.isEditable\" b:user=\"state.currentUser\" b:onClose=\"methods.editHander\" />\n    `,\n        '',\n        '',\n        `\n        <img if:falsy=\"state.isEditable\" class=\"modal-window__close\" src=\"${edit}\" e:click=\"methods.editHander\" />\n        <img if:truthy=\"state.isEditable\" class=\"modal-window__close\" src=\"${storEdit}\" e:click=\"methods.editHander\" />\n        \n        `\n      ).template\n    }\n    `,\n  };\n}\n","export { Profile } from './Profile';\n","export { Menu } from './Menu';\nexport { CreateModal } from './CreateModal';\nexport * from './Profile';\n","import { IComponentModel } from '../../../../utils';\nimport close from '../../../../../static/assets/images/Icon/close.svg';\nimport './UserBadge.css';\n\nexport function UserBadge(): IComponentModel {\n  return {\n    methods: {\n      actionClick() {\n        const { id } = this.componentProps;\n        this.componentProps.onClick(id);\n      },\n    },\n    template: /* html */ `\n      <div class=\"user-badge__container\">\n        <img if:falsy=\"props.role === admin\" class=\"modal-window__close\" src=\"${close}\" e:click=\"methods.actionClick\"/>\n        <div class=\"user-badge__title\">{{props.login}}</div>\n      </div>\n    `,\n  };\n}\n","import { IComponentModel } from '../../../../utils';\nimport { UserBadge } from './UserBadge';\n\nexport function Participants(): IComponentModel {\n  return {\n    components: {\n      UserBadge,\n    },\n    template: /* html */ `\n      <div class=\"chat-config__participants\">\n        <UserBadge map:array=\"props.chatUsers\" b:onClick=\"props.removeUser\" />\n      </div>\n    `,\n  };\n}\n","import { chatAPI } from '../../../../api';\nimport { ChatController } from '../../../../controllers';\nimport { IUser } from '../../../../interfaces';\nimport { PixelStore } from '../../../../utils';\nimport { VComponentNode } from '../../../../utils/pixel/pixelDom';\n\nconst chatController = new ChatController();\nclass ChatConfigController {\n  removeChat = async (component: VComponentNode) => {\n    const { id } = component.componentProps.chat;\n    await chatAPI.delete({ chatId: id });\n\n    await chatController.getChats();\n\n    component.componentProps.modalClose();\n\n    PixelStore.dispatch('selectedChat', {});\n  };\n\n  removeUser = (userId: number, component: VComponentNode) => {\n    const { id } = component.componentProps.chat;\n    const { chatUsers } = component.state;\n    chatAPI.deleteUser({ users: [userId], chatId: id });\n    component.state.chatUsers = chatUsers.filter((user: IUser) => user.id !== userId);\n  };\n\n  addUser = async (title: string, component: VComponentNode) => {\n    const { id } = component.componentProps.chat;\n    await chatAPI.addUser({ users: [Number(title)], chatId: id });\n    const users = await chatAPI.getUsers(id);\n    component.state.chatUsers = users;\n    component.state.title = '';\n  };\n\n  updateAvatar = async (event: any, chatId: string) => {\n    const newForm = new FormData();\n    newForm.append('avatar', event.target.files[0]);\n    newForm.append('chatId', chatId);\n    const chat = await chatAPI.uploadAvatar(newForm);\n    PixelStore.dispatch('selectedChat', chat);\n  };\n}\n\nexport const chatConfigController = new ChatConfigController();\n","import { IComponentModel } from '../../../../utils';\nimport { EditInput } from '../../../../components';\nimport { CustomEventTarget } from '../../../../interfaces';\nimport { Participants } from './Participants';\nimport { chatConfigController } from './chat-config.controller';\nimport './ChatConfig.css';\n\nexport function Config(): IComponentModel {\n  return {\n    state: {\n      chatUsers: [],\n      title: '',\n    },\n    methods: {\n      changeTitle(event: CustomEventTarget<HTMLInputElement>) {\n        const { value } = event?.target;\n        this.state.title = value;\n      },\n      addUser(event: Event) {\n        event.preventDefault();\n        chatConfigController.addUser(this.state.title, this);\n      },\n      removeUser(id: number) {\n        chatConfigController.removeUser(id, this);\n      },\n      handlePhotoChange(event: Event) {\n        event.preventDefault();\n        chatConfigController.updateAvatar(event, this.componentProps.chat.id);\n      },\n    },\n    componentDidMount() {\n      this.state.chatUsers = this.componentProps.chat.users;\n    },\n    components: {\n      EditInput,\n      Participants,\n    },\n    template: /* html */ `\n      <div class=\"chat-config\">\n        <div class=\"chat-config__info-title\">\n          <div class=\"chat-config__title\">{{props.chat.title}}</div>\n          <UserPhoto \n            b:photo=\"props.chat.avatar\" \n            inputId=\"chat_change_photo\"\n            containerClass=\"chat__avatar-container profile__avatar-container_edit\" \n            b:onChange=\"methods.handlePhotoChange\" />\n        </div>\n        <div class=\"participants__container\">\n          <Participants b:chatUsers=\"state.chatUsers\" b:removeUser=\"methods.removeUser\"/>\n\n          <EditInput \n            buttonText=\"Добавить участника\" \n            name=\"title\"\n            id=\"add_user_id\"\n            b:value=\"state.title\" \n            b:onClick=\"methods.addUser\" \n            b:onChange=\"methods.changeTitle\"\n            b:isChanged=\"state.title\"\n          />\n        </div>\n      </div>\n    `,\n  };\n}\n","import { IComponentModel } from '../../../../utils';\nimport { Modal } from '../../../../components';\nimport { Config } from './Config';\nimport { chatConfigController } from './chat-config.controller';\nimport options from '../../../../../static/assets/images/Icon/options.svg';\nimport deleteIcon from '../../../../../static/assets/images/Icon/Delete.svg';\n\nexport function ChatConfig(): IComponentModel {\n  return {\n    components: {\n      Modal,\n      Config,\n    },\n    methods: {\n      handleEsc(event: KeyboardEvent) {\n        if (event.key === 'Escape') {\n          this.componentProps.modalClose();\n        }\n      },\n      deleteChat() {\n        chatConfigController.removeChat(this);\n      },\n    },\n    componentDidMount() {\n      this.methods.handleEsc = this.methods.handleEsc.bind(this);\n      window.addEventListener('keydown', this.methods.handleEsc);\n    },\n    componentWillUnmount() {\n      window.removeEventListener('keydown', this.methods.handleEsc);\n    },\n    template: /* html */ `\n    <div class=\"header-title__chat-config\">\n      <img \n        class=\"header-title__options\" \n        src=\"${options}\" \n        e:click=\"props.openChatConfig\" \n      />\n      <div if:truthy=\"props.isChatActionsOpen\">\n        ${\n          Modal(\n            /* html */ `\n            <Config \n              b:chat=\"props.chat\"\n            />\n        `,\n            '',\n            '',\n            /* html */ `\n        <img \n          class=\"header-title__options\" \n          src=\"${deleteIcon}\" \n          e:click=\"methods.deleteChat\" \n        />\n        `\n          ).template\n        }\n      </div>\n    </div>\n    `,\n  };\n}\n","export { ChatConfig } from './ChatConfig';\n","import { IComponentModel } from '../../../utils';\nimport setting from '../../../../static/assets/images/Icon/maskGroup.svg';\nimport { Menu, Profile, CreateModal } from './Menu';\nimport { ChatConfig } from './ChatConfig';\nimport { AuthController } from '../../../controllers';\nimport { CustomEventTarget } from '../../../interfaces';\nimport { SETTING_OPTIONS } from '../const';\nimport './Header.css';\n\nconst authController = new AuthController();\n\nexport function Header(): IComponentModel {\n  return {\n    components: {\n      Menu,\n      CreateModal,\n      Profile,\n      ChatConfig,\n    },\n    state: {\n      isMenu: false,\n      isChatCreate: false,\n      isProfileOpen: false,\n      isChatActionsOpen: false,\n      selectedChat: {},\n    },\n    methods: {\n      settingClickHandler() {\n        this.state.isMenu = !this.state.isMenu;\n      },\n      closeCreateModal() {\n        this.state.isChatCreate = false;\n      },\n      closeProfileModal() {\n        this.state.isProfileOpen = false;\n      },\n      optionClick(event: CustomEventTarget<Record<string, any>>) {\n        const { name } = event.target.dataset;\n\n        switch (name) {\n          case SETTING_OPTIONS.PROFILE:\n            this.state.isProfileOpen = true;\n            break;\n          case SETTING_OPTIONS.CREATE_CHAT:\n            this.state.isChatCreate = true;\n            break;\n          case SETTING_OPTIONS.LOGOUT:\n            authController.logout();\n            break;\n          default:\n        }\n      },\n      openChatConfig() {\n        this.state.isChatActionsOpen = !this.state.isChatActionsOpen;\n      },\n      closeConfigModal() {\n        this.state.isChatActionsOpen = false;\n      },\n    },\n    pixelStore: ['selectedChat'],\n    template: /* html */ `\n      <header class=\"messanger__header\">\n        <section class=\"messanger__header-title\">\n          <h2 class=\"header-title__logo\">Pixel Chat</h2>\n          <img class=\"header-title__settings\" src=\"${setting}\" e:click=\"methods.settingClickHandler\"/>\n          <Menu if:truthy=\"state.isMenu\" b:optionClick=\"methods.optionClick\"/>     \n        </section>\n        \n        <div class=\"messanger__chat-info\">\n          <div class=\"chat-info__container\">\n            <h2 class=\"chat-info__title\">{{state.selectedChat.title}}</h2>\n            <ChatConfig \n              if:truthy=\"state.selectedChat.id\" \n              headerText=\"Настройка чата\"\n              b:isChatActionsOpen=\"state.isChatActionsOpen\"\n              b:modalClose=\"methods.closeConfigModal\"\n              b:openChatConfig=\"methods.openChatConfig\"\n              b:chat=\"state.selectedChat\"\n            />\n          </div>\n        </div>\n      </header>\n\n      <Profile \n        if:truthy=\"state.isProfileOpen\" \n        b:modalClose=\"methods.closeProfileModal\" \n        headerText=\"Профиль\"\n      />\n\n      <CreateModal \n        if:truthy=\"state.isChatCreate\" \n        b:modalClose=\"methods.closeCreateModal\" \n        headerText=\"Создание нового чата\"\n      />\n\n      \n    `,\n  };\n}\n","export { Header } from './Header';\n","import { dateHandler, IComponentModel } from '../../../utils';\nimport { UserPhoto } from '../../../components';\nimport badge from '../../../../static/assets/images/Icon/badge.png';\n\nexport function ListItem(): IComponentModel {\n  return {\n    state: {\n      isAuthor: false,\n    },\n    components: {\n      UserPhoto,\n    },\n    methods: {\n      setChat() {\n        const { setActiveChat, id } = this.componentProps;\n        setActiveChat(id);\n      },\n    },\n    template: /* html */ `\n      <li class=\"chat-list__item list-item\" e:click=\"methods.setChat\">\n        <div class=\"list-item__photo user-avatar\">\n          <UserPhoto b:photo=\"props.avatar\"/>\n        </div>\n        <div class=\"list-item__text\">\n          <h3 class=\"list-item__title\">{{props.title}}</h3>\n          <p class=\"list-item__message\" if:truthy=\"props.lastMessage\" >{{props.lastMessage.content}}</p>\n          <p class=\"list-item__message\" if:falsy=\"props.lastMessage\">Нет сообщений</p>\n        </div>\n        <div class=\"list-item__info\">\n          <h4 class=\"list-item__time\">{{props.lastMessage.time}}</h4>\n          <div class=\"list-item__budge message-budge\" if:truthy=\"props.unread_count\">\n            <img class=\"message-budge__icon\" src=\"${badge}\" />\n            <span class=\"message-budge__count\">{{props.unread_count}}</span>\n          </div>\n        </div>\n      </li>\n    `,\n  };\n}\n","import { IComponentModel } from '../../../utils';\nimport { ListItem } from './ListItem';\n\nexport function List(): IComponentModel {\n  return {\n    components: {\n      ListItem,\n    },\n    template: /* html */ ` \n    <div>\n    \n      <ul class=\"chat-list__list\" if:truthy=\"props.filteredChats\">\n        <ListItem map:array=\"props.filteredChats\" b:setActiveChat=\"props.setActiveChat\"/> \n      </ul>\n      \n      <p class=\"chat-list__list_blank\" if:falsy=\"props.filteredChats\">\n        <i>Нет активных чатов</i>\n      </p>\n      \n    </div>\n    `,\n  };\n}\n\n/* <ListItem loop:filteredChats /> */\n","import { chatAPI } from '../../../api';\nimport { PixelStore } from '../../../utils';\nimport { IChat } from '../messanger.type';\n\nexport class ChatListController {\n  createChat = async (title: string) => {\n    try {\n      const { id } = await chatAPI.create({ title });\n      console.warn(id);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  deleteChat = async (chatId: number) => {\n    try {\n      await chatAPI.delete({ chatId });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  selectChat = (chatId: number) => {\n    if (!PixelStore.store.selectedChat || PixelStore.store.selectedChat.id !== chatId) {\n      PixelStore.dispatch(\n        'selectedChat',\n        PixelStore.store.chats.find((chat: IChat) => chat.id === chatId)\n      );\n    }\n  };\n}\n","import { IComponentModel } from '../../../utils';\nimport { SearchInput } from '../../../components';\nimport { CustomEventTarget } from '../../../interfaces';\nimport { List } from './List';\nimport { ChatListController } from './chat-list.controller';\nimport './ChatList.css';\nimport { ChatController } from '../../../controllers';\nimport { IChat } from '../messanger.type';\n\nconst chatController = new ChatController();\nconst chatListController = new ChatListController();\n\n/* eslint no-console: \"off\" */\nexport function ChatList(): IComponentModel {\n  return {\n    components: {\n      SearchInput,\n      List,\n    },\n    state: {\n      searchValue: '',\n      chats: [],\n      filteredChats: [],\n    },\n    componentDidMount() {\n      chatController.getChats();\n    },\n    methods: {\n      filterChatList(event: CustomEventTarget<HTMLInputElement>) {\n        const { value } = event.target;\n        this.state.searchValue = value;\n      },\n      setActiveChat(chatId: number) {\n        chatListController.selectChat(chatId);\n      },\n    },\n    componentDidUpdate(_, props: Record<string, any>) {\n      if ('searchValue' in props) {\n        const { chats } = this.state;\n        this.state.filteredChats = chats.filter((chat: IChat) => chat.title.indexOf(props.searchValue) !== -1);\n      } else if (props.chats) {\n        if (this.state.searchValue) {\n          this.state.filteredChats = props.chats.filter((chat: IChat) => chat.title.indexOf(props.searchValue) !== -1);\n        } else {\n          this.state.filteredChats = props.chats;\n        }\n      }\n    },\n    pixelStore: ['chats'],\n    template: /* html */ ` \n    <aside class=\"messanger__chat-list\" >\n      <form class=\"search-form\">\n        <SearchInput \n          name=\"search\" \n          class=\"search-form__contol\" \n          placeholder=\"Поиск\" \n          b:onChange=\"methods.filterChatList\" \n          b:value=\"state.searchValue\" />\n      </form>\n      <List b:filteredChats=\"state.filteredChats\" b:setActiveChat=\"methods.setActiveChat\"/>\n    </aside>\n    `,\n  };\n}\n","export { ChatList } from './ChatList';\nexport { ListItem } from './ListItem';\n","import { IComponentModel } from '../../../utils';\nimport './Message.css';\n\nexport function Message(): IComponentModel {\n  return {\n    template: /* html */ `\n    <article class=\"messages-area__message\">\n      <div class=\"user-avatar__container user-avatar__container_message\">\n      <UserPhoto \n        imgClass=\"user-avatar__img user-avatar__img_message\" b:photo=\"props.avatar\" />\n     \n      </div>\n      <div class=\"messages-area__content\">\n        <span class=\"content__author content__author_own\" >{{props.name}}</span>\n        <p class=\"content__message\">{{props.content}}</p>\n      </div>\n      <div class=\"messages-area__time\">{{props.time}}</div>\n    </article>\n    `,\n  };\n}\n","import { IComponentModel } from '../../../utils';\n\nexport function MessageArea(): IComponentModel {\n  return {\n    componentDidMount() {\n      this.componentProps.setScrollEl(this.domEl);\n    },\n    template: /* html */ `\n    <div class=\"chat__messages-area\">\n      <Message if:truthy=\"props.chat.messages\" map:array=\"props.chat.messages\" />\n      <div if:falsy=\"props.chat.messages\" class=\"messanger__chat-blank\">Нет сообщений</div>\n    </div>\n    `,\n  };\n}\n","import { IComponentModel } from '../../../utils';\nimport { Input, UserPhoto, Button, Textarea } from '../../../components';\nimport { Message } from './Message';\nimport { MessageArea } from './MessageArea';\n\nimport clip from '../../../../static/assets/images/Icon/clip1.png';\nimport alien from '../../../../static/assets/images/Icon/alien.png';\nimport pink from '../../../../static/assets/images/Icon/_emj14.png';\nimport fire from '../../../../static/assets/images/Icon/emoji3.png';\nimport shock from '../../../../static/assets/images/Icon/shock.png';\n\nimport './Chat.css';\nimport { CustomEventTarget } from '../../../interfaces';\nimport { messagesController } from '../../../controllers';\n\nexport function Chat(): IComponentModel {\n  return {\n    state: {\n      selectedChat: {},\n      stickers: false,\n      currentUser: null,\n      scrollEl: null,\n      message: '',\n    },\n    methods: {\n      inputHandler(event: CustomEventTarget<HTMLInputElement>) {\n        this.state.message = event.target.value;\n      },\n      setScrollEl(domEl: HTMLElement) {\n        this.state.scrollEl = domEl;\n      },\n      sendMessage(event?: Event) {\n        const { message, selectedChat } = this.state;\n\n        if (event) {\n          event.preventDefault();\n        }\n\n        if (message.trim().length) {\n          messagesController.send(selectedChat.id, message);\n          this.state.message = '';\n        }\n      },\n    },\n    components: {\n      Input,\n      Message,\n      UserPhoto,\n      Button,\n      Textarea,\n      MessageArea,\n    },\n    componentDidUpdate(_, props: Record<string, string>) {\n      if (props.selectedChat) {\n        this.state.scrollEl.scrollTop = this.state.scrollEl.scrollHeight;\n      }\n    },\n    pixelStore: ['selectedChat', 'currentUser'],\n    template: /* html */ `\n    <main class=\"messanger__chat\">\n      <span if:falsy=\"state.selectedChat.id\" class=\"messanger__chat-blank\">Чат не выбран</span>\n      <div if:truthy=\"state.selectedChat.id\" class=\"chat__container\" >\n        <MessageArea b:chat=\"state.selectedChat\" b:setScrollEl=\"methods.setScrollEl\"/>\n\n        <div class=\"chat__input-area\">\n          <UserPhoto \n            containerClass=\"user-avatar__container_input\" \n            imgClass=\"user-avatar__img_input\" b:photo=\"state.currentUser.avatar\" />\n\n          <form class=\"chat__message-form\" e:submit=\"methods.sendMessage\">\n\n            <div class=\"message-form__textarea-wraper\">\n              <Textarea \n                placeholder=\"Сообщение\" \n                name=\"newMessage\" \n                b:value=\"state.message\"  \n                b:onChange=\"methods.inputHandler\"\n                b:onKeyDown=\"methods.sendMessage\"\n              />\n              <img src=\"${clip}\" class=\"message-form__options\"/>\n            </div>\n\n            <div class=\"message-form__action-line\">\n              <div class=\"action-line__emoji-bar\" >\n                <img src=\"${alien}\" class=\"emoji\"/>\n                <img src=\"${fire}\" class=\"emoji\"/>\n                <img src=\"${shock}\" class=\"emoji\"/>\n                <img src=\"${pink}\" class=\"emoji\"/>\n              </div>\n\n              <Button \n                type=\"submit\" \n                text=\"Отправить\" \n                class=\"button_transparent button_transparent_send\" \n                b:onClick=\"methods.sendMessage\" \n              />\n            </div>\n            \n          </form>\n\n          <UserPhoto \n            containerClass=\"user-avatar__container_input\" \n            imgClass=\"user-avatar__img_input\" b:photo=\"state.selectedChat.avatar\" />\n        </div>\n      </div>\n    </main>\n    `,\n  };\n}\n","export { Chat } from './Chat';\nexport { Message } from './Message';\n","export { Header } from './Header';\nexport { ChatList } from './ChatList';\nexport { Chat } from './Chat';\n","export { Chat, Header, ChatList } from './Messanger';\n","import { IComponentModel } from '../../utils';\nimport { Header, ChatList, Chat } from '../../modules';\nimport './Messanger.css';\n\nfunction Messanger(): IComponentModel {\n  return {\n    components: { Header, ChatList, Chat },\n    template: /* html */ `\n    <div class=\"container\">\n      <div class=\"messanger\">\n        <Header />\n        <ChatList />\n        <Chat />\n      </div>\n    </div>\n    `,\n  };\n}\n\nexport default Messanger;\n","import Messanger from './Messanger';\n\nexport default Messanger;\n","const LOGIN_FIELD_TYPE = {\n  login: 'text',\n  password: 'password',\n};\n\nconst FIELD_TYPE = {\n  login: 'text',\n  password: 'password',\n  email: 'email',\n  first_name: 'text',\n  second_name: 'text',\n  phone: 'tel',\n  passwordRepeat: {\n    compare: 'password',\n    type: 'password',\n    field: 'passwordRepeat',\n  },\n};\n\nenum AUTH_ERRORS {\n  RFNV = 'Registration form is not valid',\n  LFNV = 'Login form is not valid',\n}\n\nexport { FIELD_TYPE, LOGIN_FIELD_TYPE, AUTH_ERRORS };\n","import { CookieAuthController } from './controllers';\n\nconst cookieAuthController = new CookieAuthController();\n\nconst ROUTES = {\n  login: 'login',\n  register: 'register',\n  messanger: 'messanger',\n  profile: 'profile',\n};\n\nconst routerConfig = {\n  auth: {\n    check: cookieAuthController.checkAuth,\n    redirect: ROUTES.login,\n    authRedirect: ROUTES.messanger,\n    permittedRoutes: [ROUTES.login, ROUTES.register],\n  },\n  defaultRoute: {\n    path: ROUTES.login,\n    component: 'Login',\n    title: 'Вход',\n  },\n  routes: {\n    [ROUTES.register]: {\n      component: 'Registration',\n      title: 'Регистрация',\n    },\n    [ROUTES.messanger]: {\n      component: 'Messanger',\n      title: 'Чат',\n    },\n    wrong: {\n      component: 'UserMissPage',\n      title: 'Страница не найдена',\n    },\n    error: {\n      component: 'ServerMissPage',\n      title: 'Страница временно недоступна',\n    },\n  },\n};\n\nexport { ROUTES, routerConfig };\n","import { authAPI } from '../../../api';\nimport { CookieAuthController } from '../../../controllers';\nimport { FormValidator } from '../../../utils';\nimport { AUTH_ERRORS, LOGIN_FIELD_TYPE } from '../const';\n\nconst cookieAuthAPI = new CookieAuthController();\nconst validatorConfig = { form: 'formFields', errors: 'errors' };\n\nexport class LoginController {\n  login = async (data: Record<string, any>) => {\n    try {\n      const isValid = FormValidator.validate(data, validatorConfig, LOGIN_FIELD_TYPE);\n\n      if (!isValid) {\n        throw Error(AUTH_ERRORS.LFNV);\n      }\n      await authAPI.login(data[validatorConfig.form]);\n      await cookieAuthAPI.checkAuth();\n    } catch (error) {\n      if (error && error.reason) {\n        if (error.reason === 'Login or password is incorrect' || error.reason === 'Not found') {\n          for (const key in data[validatorConfig.errors]) {\n            if (key in data[validatorConfig.errors]) {\n              data[validatorConfig.errors][key] = 'Неверные данные';\n            }\n          }\n        }\n      }\n    }\n  };\n}\n","import { FormValidator, IComponentModel, PixelRouter } from '../../../utils';\nimport { Input, Modal, Button, PagesContainer } from '../../../components';\nimport { CustomEventTarget } from '../../../interfaces';\nimport { LOGIN_FIELD_TYPE } from '../const';\nimport { ROUTES } from '../../../routes';\nimport { LoginController } from './login.controller';\nimport '../Auth.css';\n\nconst loginController = new LoginController();\n\nconst validConfig = { form: 'formFields', errors: 'errors' };\n\nfunction Login(): IComponentModel {\n  const loginFormId = 'id-login_form';\n  return {\n    state: {\n      formFields: {\n        login: '',\n        password: '',\n      },\n      errors: {\n        login: '',\n        password: '',\n      },\n    },\n    methods: {\n      formFocusHandler() {\n        FormValidator.validate(this.state, validConfig, LOGIN_FIELD_TYPE);\n      },\n      formBlurHandler() {\n        FormValidator.validate(this.state, validConfig, LOGIN_FIELD_TYPE);\n      },\n      submitForm(event: Event) {\n        event.preventDefault();\n        loginController.login(this.state);\n      },\n      replaceToRegister(event: Event) {\n        event.preventDefault();\n        PixelRouter.go(ROUTES.register);\n      },\n      inputHandler(event: CustomEventTarget<HTMLInputElement>) {\n        const { name, value } = event.target;\n        this.state.formFields[name] = value;\n      },\n    },\n    components: {\n      Modal,\n      PagesContainer,\n      Input,\n      Button,\n    },\n    template: /* html */ `\n    <div class=\"container\">\n      <section class=\"auth\">\n        <header class=\"auth__header\">\n          <h2>Вход</h2>\n        </header>\n        <div class=\"auth__body\">\n          <form \n            class=\"auth-form auth-form_login\" \n            e:submit=\"methods.submitForm\" \n            e:focus=\"methods.formFocusHandler\" \n            e:blur=\"methods.formBlurHandler\" \n          >\n            <div class=\"auth-form__body\">\n              <Input \n                label=\"Логин\" \n                name=\"login\" \n                type=\"${LOGIN_FIELD_TYPE.login}\" \n                id=\"login_input_login\" \n                b:error=\"state.errors.login\"\n                b:value=\"state.formFields.login\" \n                b:onChange=\"methods.inputHandler\"\n                />\n\n              <Input \n                label=\"Пароль\" \n                name=\"${LOGIN_FIELD_TYPE.password}\" \n                type=\"password\" \n                id=\"login_input_password\" \n                b:error=\"state.errors.password\"\n                b:value=\"state.formFields.password\"\n                b:onChange=\"methods.inputHandler\"\n                />\n            </div>\n            <footer class=\"auth-form__footer\">\n              <Button \n                text=\"Авторизоваться\" \n                class=\"button_accent\" \n                type=\"submit\" \n                b:onClick=\"methods.submitForm\" \n              />\n\n              <Button \n                text=\"Нет аккаунта?\" \n                class=\"button_transparent\" \n                type=\"button\" \n                b:onClick=\"methods.replaceToRegister\"\n              />\n            </footer>\n          </form>\n        </div>             \n      </section>\n    </div>`,\n  };\n}\n\nexport default Login;\n","import Login from './Login';\n\nexport default Login;\n","import { FormValidator, PixelRouter } from '../../../utils';\nimport { FIELD_TYPE, AUTH_ERRORS } from '../const';\nimport { ROUTES } from '../../../routes';\nimport { authAPI } from '../../../api';\nimport { AuthController } from '../../../controllers';\n\nconst validationConfig = { form: 'formFields', errors: 'errors' };\nconst authController = new AuthController();\nexport class RegisterController {\n  register = async (data: Record<string, any>) => {\n    try {\n      const isValid = FormValidator.validate(data, validationConfig, FIELD_TYPE);\n\n      if (!isValid) {\n        throw Error(AUTH_ERRORS.RFNV);\n      }\n\n      await authAPI.register(data[validationConfig.form]);\n      await authController.checkAuth();\n      PixelRouter.go(ROUTES.messanger);\n    } catch (error) {\n      if (error && error.reason) {\n        if (error.reason === 'Login already exists') {\n          data[validationConfig.errors].login = 'Используйте другой логин';\n        }\n      } else {\n        console.warn(error);\n      }\n    }\n  };\n}\n","import { FormValidator, generateUniqId, IComponentModel, PixelRouter } from '../../../utils';\nimport { Input, Modal, Button } from '../../../components';\nimport { FIELD_TYPE } from '../const';\nimport { CustomEventTarget } from '../../../interfaces';\nimport { ROUTES } from '../../../routes';\nimport { RegisterController } from './registration.controller';\nimport '../Auth.css';\n\nconst registerController = new RegisterController();\nconst validConfig = { form: 'formFields', errors: 'errors' };\n\nfunction Registration(): IComponentModel {\n  return {\n    state: {\n      formFields: {\n        email: '',\n        login: '',\n        first_name: '',\n        second_name: '',\n        phone: '',\n        password: '',\n        passwordRepeat: '',\n      },\n\n      errors: {\n        email: '',\n        login: '',\n        first_name: '',\n        second_name: '',\n        phone: '',\n        password: '',\n        passwordRepeat: '',\n      },\n    },\n    methods: {\n      formFocusHandler() {\n        FormValidator.validate(this.state, validConfig, FIELD_TYPE);\n      },\n      formBlurHandler() {\n        FormValidator.validate(this.state, validConfig, FIELD_TYPE);\n      },\n      submitForm(event: Event) {\n        event.preventDefault();\n        registerController.register(this.state);\n      },\n      replaceToLogin() {\n        PixelRouter.go(ROUTES.login);\n      },\n      inputHandler(event: CustomEventTarget<HTMLInputElement>) {\n        const { name, value } = event.target;\n        this.state.formFields[name] = value;\n      },\n    },\n    components: {\n      Modal,\n      Input,\n      Button,\n    },\n    template: /* html */ `\n    <div class=\"container\">\n      <section class=\"auth\">\n        <header class=\"auth__header\">\n          <h2>Регистрация</h2>\n        </header>\n        <div class=\"auth__body\">\n          <form \n            class=\"auth-form auth-form_login\" \n            e:submit=\"methods.submitForm\" \n            e:blur=\"methods.formBlurHandler\" \n            e:focus=\"methods.formFocusHandler\"\n          >\n\n            <div class=\"auth-form__body auth-form__body--register\">\n\n              <Input \n                label=\"Почта\" \n                name=\"email\" \n                type=\"email\" \n                id=\"input${generateUniqId()}\" \n                b:value=\"state.formFields.email\"\n                b:error=\"state.errors.email\"\n                b:onChange=\"methods.inputHandler\"\n              />\n\n              <Input \n                label=\"Логин\" \n                name=\"login\" \n                type=\"text\" \n                id=\"input${generateUniqId()}\" \n                b:value=\"state.formFields.login\"\n                b:error=\"state.errors.login\"\n                b:onChange=\"methods.inputHandler\"\n              />\n\n              <Input \n                label=\"Имя\" \n                name=\"first_name\" \n                type=\"text\" \n                id=\"input${generateUniqId()}\" \n                b:value=\"state.formFields.first_name\"\n                b:error=\"state.errors.first_name\"\n                b:onChange=\"methods.inputHandler\"\n              />\n\n              <Input \n                label=\"Фамилия\" \n                name=\"second_name\" \n                type=\"text\" \n                id=\"input${generateUniqId()}\" \n                b:value=\"state.formFields.second_name\"\n                b:error=\"state.errors.second_name\"\n                b:onChange=\"methods.inputHandler\"\n              />\n\n              <Input \n                label=\"Телефон\" \n                name=\"phone\" \n                type=\"tel\" \n                id=\"input${generateUniqId()}\" \n                b:value=\"state.formFields.phone\"\n                b:error=\"state.errors.phone\"\n                b:onChange=\"methods.inputHandler\"\n              />\n\n              <Input \n                label=\"Пароль\" \n                name=\"password\" \n                type=\"password\" \n                id=\"input${generateUniqId()}\" \n                b:value=\"state.formFields.password\"\n                b:error=\"state.errors.password\"\n                b:onChange=\"methods.inputHandler\"\n              />\n\n              <Input \n                label=\"Повторите пароль\" \n                name=\"passwordRepeat\" \n                type=\"password\" \n                id=\"input${generateUniqId()}\" \n                b:value=\"state.formFields.passwordRepeat\"\n                b:error=\"state.errors.passwordRepeat\"\n                b:onChange=\"methods.inputHandler\"\n              />\n              \n            </div>\n\n            <footer class=\"auth-form__footer\">\n\n              <Button \n                text=\"Зарегистрироваться\"\n                class=\"button_accent\" \n                type=\"submit\" \n                b:onClick=\"methods.submitForm\"\n              />\n\n              <Button \n                text=\"Уже есть аккаунт\" \n                class=\"button button_transparent\" \n                type=\"button\" \n                b:onClick=\"methods.replaceToLogin\"\n              />\n\n            </footer>\n          </form>\n        </div>              \n      </section>\n    </div>\n    `,\n  };\n}\n\nexport default Registration;\n","import Registration from './Registration';\n\nexport default Registration;\n","import Login from './Login';\nimport Registration from './Registration';\n\nexport { IUser } from './auth.type';\nexport { Login, Registration };\n","import { IComponentModel } from '../../utils';\nimport './MissedPages.css';\n\nexport function ServerMissPage(): IComponentModel {\n  return {\n    template: /* html */ `\n    <div class=\"container container_server-miss\">\n     <section class=\"error-page_500 error-page\">\n        <div class=\"error-page__content error-page__content_500\">\n          <h1 class=\"error-page__title\">500</h1>\n          <p class=\"error-page__message\">Страница временно не доступна</p>\n          <a class=\"error-page__link\" href=\"/\" >PIXEL CHAT</a>\n        </div>\n      </section>\n    </div>\n    `,\n  };\n}\n","import { IComponentModel } from '../../utils';\nimport './MissedPages.css';\n\nexport function UserMissPage(): IComponentModel {\n  return {\n    template: /* html */ `\n    <div class=\"container container_user-miss\">\n      <section class=\"error-page_404 error-page\">\n        <div class=\"error-page__content\">\n          <h1 class=\"error-page__title\">404</h1>\n          <p class=\"error-page__message\">Страница, которую вы запрашиваете, не найдена</p>\n        </div>\n        <a class=\"error-page__link\" href=\"/\" >PIXEL CHAT</a>\n      </section>\n    </div>\n    `,\n  };\n}\n","export { ServerMissPage } from './ServerMissPage';\nexport { UserMissPage } from './UserMissPage';\n","import Messanger from './Messanger';\n\nexport { Login, Registration, IUser } from './Auth';\nexport { ServerMissPage, UserMissPage } from './MissedPages';\nexport { Messanger };\n","import { Login, Registration, Messanger, UserMissPage, ServerMissPage } from './pages';\nimport { routerConfig } from './routes';\nimport { Pixel } from './utils';\nimport './index.css';\n\nconst currentUserDefault = {\n  email: '',\n  login: '',\n  first_name: '',\n  second_name: '',\n  phone: '',\n};\n\nPixel.config({\n  el: '#root',\n  store: {\n    currentUser: currentUserDefault,\n    selectedChat: null,\n    chatUsers: [],\n    chats: [],\n    filteredChats: [],\n  },\n  routerConfig,\n  components: {\n    Login,\n    Registration,\n    Messanger,\n    UserMissPage,\n    ServerMissPage,\n  },\n});\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}